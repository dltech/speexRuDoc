#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\use_default_options true
\maintain_unincluded_children false
\language russian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter courier
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format ps
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 2
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle default
\listings_params "inputencoding=utf8x,extendedchars=true"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Документация по Speex
\begin_inset Newline newline
\end_inset

Версия 1.2
\end_layout

\begin_layout Author
Jean-Marc Valin
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Copyright 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
copyright
\end_layout

\end_inset

 2002-2008 Jean-Marc Valin/Xiph.org Foundation
\end_layout

\begin_layout Standard
Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.1 or any later
 version published by the Free Software Foundation; with no Invariant Section,
 with no Front-Cover Texts, and with no Back-Cover.
 A copy of the license is included in the section entitled "GNU Free Documentati
on License".
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Введение в Speex
\end_layout

\begin_layout Standard
Кодек Speex (
\family typewriter
http://www.speex.org/
\family default
) сушествует из-за необходимости в речевом кодеке у которого открытый исходный
 код и который свободен от патентных отчислений.
 Это необходимые условия для применимости в любых открытых программных продуктах.
 Важно заметить, что Speex для речи в то время как Vorbis для музыки/звуков.
 К сожалению в отличии от остальных речевых кодеков, Speex разработан не
 для мобильных телефонов, а для пакетных сетей и различных VoIP приложений.
 Сжатие в файлы, безусловно, также поддерживается.
\end_layout

\begin_layout Standard
Кодек Speex создан очень гибким и поддерживающим широкий диапазон качества
 речи и битрейта.
 Поддержка хорошего качества речи означает что Speex может кодировать широкополо
сную речь (частота дискретизации 16 кГц) вдобавок к узкополосной речи (телефонно
е качество, частота дискретизации 8 кГц).
 
\end_layout

\begin_layout Standard
Ориентированность на VoIP вместо мобильных телефонов означает что Speex
 стойкий к потере пакетов, но не к повреждению таковых.
 Это основывается на предположении что в VoIP пакеты либо приходят не измененным
и, либо не приходят вовсе.
 Так как Speex нацелен на широкий диапазон устройств, он обладает скромной
 и регулируемой сложностью и малым размером кода.
\end_layout

\begin_layout Standard
Все цели разработки приводят к выбору техники кодирования CELP.
 Одна из основных причин состоит в том, что давно доказано что CELP
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CELP
\end_layout

\end_inset

 надежно работает и хорошо масштабируется при низких скоростях передачи
 данных (т.е.
 DoD CELP @ 4.8 kbps) и высоких скоростях (т.е.
 G.728 @ 16 kbps).
 
\end_layout

\begin_layout Section
Помощь
\begin_inset CommandInset label
LatexCommand label
name "sec:Getting-help"

\end_inset


\end_layout

\begin_layout Standard
Как и для большинства проектов с открытым исходным кодом существует множество
 способов получить помощь по Speex.
 Включая следующие:
\end_layout

\begin_layout Itemize
Данное руководство
\end_layout

\begin_layout Itemize
Остальная документация на сайте Speex (http://www.speex.org/)
\end_layout

\begin_layout Itemize
Рассылка: Обсуждаются все связанные со Speex темы на speex-dev@xiph.org (не
 только для разработчиков)
\end_layout

\begin_layout Itemize
IRC: Основной канал #speex на irc.freenode.net.
 Стоит заметить, что из-за разницы во времени, ожидание ответа может занять
 некоторое время, пожалуйста будьте терпеливыми.
\end_layout

\begin_layout Itemize
Отправьте email автору лично на jean-marc.valin@usherbrooke.ca 
\series bold
только
\series default
 для личных вопросов, которые вы не хотите обсуждать публично.
\end_layout

\begin_layout Standard
Перед тем как просить помощи (через рассылку или IRC), 
\series bold
важно прочесть данное руководство
\series default
.
 Как правило неприлично спрашивать о тех разделах, которые детально и ясно
 описаны в руководстве.
 С другой стороны это правильно (мы даже одобряем это) просить объяснений
 по поводу того что не отражено в данном руководстве.
 Данное руководство не покрывает всего что связано со Speex, так что каждый
 может задавать вопросы, присылать комментарии, спрашивать о функционале,
 или сообщите нам о том как вы используете Speex.
\end_layout

\begin_layout Standard
Существуют еще некоторые дополнительные указания связанные с рассылкой.
 Перед отправкой отчета об ошибке, настоятельно рекомендуется (если возможно)
 сначала проверить, где проявляется данная ошибка, используя утилиты speecenc
 и speexdec (см.
 раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Command-line-encoder/decoder"

\end_inset

).
 Ошибки связанные со сторонним кодом сложнее найти для обоих, и они очень
 часто вызваны ошибками не имеющими ничего общего со Speex.
 
\end_layout

\begin_layout Section
Об этом документе
\end_layout

\begin_layout Standard
Данный документ структурирован следующим образом.
 Раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Feature-description"

\end_inset

 рассказывает про различные функции Speex и определяет многие основные термины,
 которые используются в данном руководстве.
 Раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Command-line-encoder/decoder"

\end_inset

 документирует стандарт инструментов командной строки предоставленные в
 дистрибутиве Speex.
 Раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Programming-with-Speex"

\end_inset

 включает в себя детальные инструкции о программировании с использованием
 libspeex
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
libspeex
\end_layout

\end_inset

 API.
 Раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Formats-and-standards"

\end_inset

 содержит информацию относящуюся к Speex т стандартам.
 
\end_layout

\begin_layout Standard
Три последних раздела описывают алгоритмы используемые в Speex.
 Для понимания данных разделов требуются знания по обработке сигналов, но
 то не требуется для обычного использования Speex.
 Они предназначены для людей, которые хотят понять как работает Speex и/или
 желают провести некоторое исследование основанное на Speex.
 Раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Introduction-to-CELP"

\end_inset

 содержит основные идеи CELP, в то время как разделы 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Speex-narrowband-mode"

\end_inset

 и 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Speex-wideband-mode"

\end_inset

 специфичны для Speex.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Описание кодека
\begin_inset CommandInset label
LatexCommand label
name "sec:Feature-description"

\end_inset


\end_layout

\begin_layout Standard
Этот раздел рассказывает о Speex и его функциях более детально.
\end_layout

\begin_layout Section
Основные идеи
\end_layout

\begin_layout Standard
До введения в основные функции Speex, здесь представлены некоторые идеи
 касаемые кодирования звука которые помогают лучше понять остальную информацию.
 Хотя некоторые являются общими понятиями обработки голоса и звука, остальные
 специфичны для Speex.
\end_layout

\begin_layout Subsection*
Частота дискретизации
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
sampling rate
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Частота дискретизации выраженная в герцах (Гц), это количество выборок сигнала
 которые берутся за один период.
 Для частоты дискретизации равной 
\begin_inset Formula $F_{s}$
\end_inset

 кГц, наибольшая частота, которая может быть представлена равна 
\begin_inset Formula $F_{s}/2$
\end_inset

 кГц (
\begin_inset Formula $F_{s}/2$
\end_inset

 также известна как частота Найквиста).
 Это фундаментальное свойство в обработке сигнала подтверждается теоремой
 Котельникова.
 Speex разработан для трех частот дискретизации: 8 кГц, 16 кГц, and 32 кГц.
 Он названы также как узкополосный, широкополосный, и ультра широкополосный
 соответственно.
\end_layout

\begin_layout Subsection*
Битрейт
\end_layout

\begin_layout Standard
При кодировании речевого сигнала, скорость передачи данных (битрейт) определяетс
я как количество битов в единицу времени, необходимое для кодирования речи.
 Он измеряется в битах в секунду (б/с), или как правило в килобитах в секунду.
 Также важно различать между килобитами в секунду (к
\series bold
б
\series default
/с) и килобайтами в сеукнду (к
\series bold
Б
\series default
/с).
 
\end_layout

\begin_layout Subsection*
Качество
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
quality
\end_layout

\end_inset

 (переменная)
\end_layout

\begin_layout Standard
Speex это кодек с потерями, это означает что он достигает сжатия ценой точности
 входного сигнала.
 В отличии от некоторых других речевых кодеков, здесь можно контролировать
 соотношение между качеством и объемом данных.
 Процесс кодирования Speex по большей части параметром качества, который
 находится в диапаоне от 0 до 10.
 При постоянном битрейте
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
constant bit-rate
\end_layout

\end_inset

 (CBR), параметр это качества целочисленный, в то время как для переменного
 битрейта (VBR), параметр с плавающей точкой.
 
\end_layout

\begin_layout Subsection*
Сложность
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
complexity
\end_layout

\end_inset

 (переменная)
\end_layout

\begin_layout Standard
В Speex можно варьировать сложность алгоритма кодировщика.
 то выполняется через контроль осуществляемого поиска при помощи целого
 числа, варьирующегося в диапазоне от 1 до 10, данный параметр похож на
 опции -1 до -9 в утилитах сжатия 
\emph on
gzip
\emph default
 и 
\emph on
bzip2
\emph default
.
 Для обычного использования уровень шума при сложности 1 на 1 или 2 дБ выше
 чем при сложности 10, но требования к процессору для сложности 10 приблизительн
о в пять раз выше чем для сложности 1.
 На практике наилучший компромисс находится между сложностью 2 и 4, хотя
 более высокие установки зачастую полезны при кодировании не речевых звуков,
 таких как тоны DTMF
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
DTMF
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
Переменный битрейт
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
variable bit-rate
\end_layout

\end_inset

 (VBR)
\end_layout

\begin_layout Standard
Переменный битрейт (VBR) позволяет кодеку менять битрейт динамически для
 адаптации к 
\begin_inset Quotes eld
\end_inset

сложности
\begin_inset Quotes erd
\end_inset

 кодируемого звука.
 Например в Speex звуки такие как гласные и высокоэнергетические импульсные
 помехи требуют большего битрейта для достижения хорошего качества, в то
 время как согласные (т.е.
 звуки с, ф) могут быть адекватно закодированы меньшим количеством бит.
 По этой причине с помощью VBR можно достичь меньшего битрейта для прежнего
 качества, или лучшего качества при прежнем битрейте.
 Несмотря на его преимущества, у VBR имеются два основных недостатка: во
 первых, при определении только качества, нет гарантий относительно среднего
 битрейта.
 Во-вторых некоторые приложения реального времени, такие как VoIP, учитывают
 только максимальный битрейт, который должен быть достаточно низким для
 канала связи.
\end_layout

\begin_layout Subsection*
Средний битрейт
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
average bit-rate
\end_layout

\end_inset

 (ABR)
\end_layout

\begin_layout Standard
Средний битрейт решает одну из проблем VBR, потому как он динамически регулирует
 качество VBR, чтобы поддерживать определенный целевой битрейт.
 Потому как качество/битрейт регулируется в реальном времени (цикл без обратной
 связи), глобальное качество будет немного ниже чем то, что получено путем
 кодирования в VBR с точной установкой качества для обеспечения целевого
 среднего битрейта.
\end_layout

\begin_layout Subsection*
Определение присутствия голосового сигнала
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
voice activity detection
\end_layout

\end_inset

 (VAD)
\end_layout

\begin_layout Standard
Если включен, определитель присутствия голосового сигнала определяет звук,
 который будет кодироваться, им может быть речь или тишина/фоновый шум.
 VAD всегда неявно включается при кодировании в VBR, таким образом, эта
 опция полезна при работе без VBR.
 В данном случае Speex определяет периоды времени без голоса и кодирует
 их достаточны количеством бит для воспроизведения фонового шума.
 Это называется комфортной генерацией шума (CNG).
\end_layout

\begin_layout Subsection*
Прерывистая передача
\begin_inset Index idx
status open

\begin_layout Plain Layout
discontinuous transmission
\end_layout

\end_inset

 (DTX)
\end_layout

\begin_layout Standard
Прерывистая передача это дополнение к режимам VAD/VBR, которое позволяет
 полностью остановить передачу когда фоновый шум является стационарным.
 При работе с файлами, потому как мы не можем остановить запись в файл,
 используется только 5 бит для записи подобных кадров (что соответствует
 250 бит/с).
\end_layout

\begin_layout Subsection*
Перцепционное усиление
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
perceptual enhancement
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Перцепционное усиление это часть декодировщика, которая при включении пытается
 уменьшить восприятие шума/искажений произведенных в процессе кодирования/декоди
рования.
 В большинстве случаев перцепционное усиление объективно удаляет звук от
 оригинального (например, сосредотачиваясь только на соотношении сигнал-шум),
 но в итоге звук лучше (субъективное улучшение).
\end_layout

\begin_layout Subsection*
Скрытость и задержка алгоритма
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
algorithmic delay
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Каждый речевой кодек вносит задержку в передачу.
 Для Speex эта задержка равна размеру кадра, плюс определенный запас, необходимы
й для обработки каждого кадра.
 В узкополосном режиме (8 кГц) запас составляет 10 мс, в широкополосном
 режиме (16 кГц) составляет 13.9 мс и в ультра широкополосном режиме (32
 кГц) запас 15.9 мс, итоговая задержка алгоритма составляет 30 мс, 33.9 мс
 и 35.9 мс соответственно.
 Эти значения не учитывают время, которое необходимо процессору для кодирования
 и декодирования кадров.
\end_layout

\begin_layout Section
Кодек
\end_layout

\begin_layout Standard
Основные характеристики Speex могут быть кратко изложен следующим образом:
\end_layout

\begin_layout Itemize
Свободное программное обеспечение с открытым исходным кодом
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
open-source
\end_layout

\end_inset

, свободен от патентных ограничений
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
patent
\end_layout

\end_inset

 и не требует лицензионных отчислений
\end_layout

\begin_layout Itemize
Совмещение узкополосного
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
narrowband
\end_layout

\end_inset

 и широкополосного
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
wideband
\end_layout

\end_inset

 режимов с помощью встроенного потока битов
\end_layout

\begin_layout Itemize
Поддержка широкого диапазона битрейтов (от 2.15 кбит/с до 44 кбит/с)
\end_layout

\begin_layout Itemize
Режимы динамического переключение битрейта (AMR) и переменного битрейта
 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
variable bit-rate
\end_layout

\end_inset

 (VBR)
\end_layout

\begin_layout Itemize
Определение присутствия голосового сигнала
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
voice activity detection
\end_layout

\end_inset

 (VAD, совмещено с VBR) и прерывистая передача (DTX)
\end_layout

\begin_layout Itemize
Изменяемая сложность
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
complexity
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Встроенная широкополосная структура (масштабируемая частота дискретизации)
\end_layout

\begin_layout Itemize
Ультра-широкополосный режим с частотой дискретизации 32 кГц
\end_layout

\begin_layout Itemize
Intensity stereo encoding option
\end_layout

\begin_layout Itemize
Целочисленная реализация
\end_layout

\begin_layout Section
Препроцессор
\end_layout

\begin_layout Standard
Эта часть касается модуля препроцессора введенного в ветке 1.1.x.
 Препроцессор создан для обработки звука до запуска кодировщика.
 Препроцессор предоставляет три основных функции:
\end_layout

\begin_layout Itemize
подавление шума
\end_layout

\begin_layout Itemize
автоматическая регулировка усиления (AGC)
\end_layout

\begin_layout Itemize
определение присутствия голосового сигнала (VAD)
\end_layout

\begin_layout Standard
Шумоподавление может быть использовано для уменьшения количества фонового
 шума имеющегося во входном сигнале.
 Это обеспечивает более более высокое качество речи, при этом без разницы,
 кодируется ли сигнал при помощи Speex или нет.
 Однако при использовании сигнала с пониженным уровнем шума с кодеком существует
 дополнительная выгода.
 Речевые кодеки в целом (включая Speex) как правило обрабатывая плохой и
 зашумленный сигнал усиливают шум.
 Подавление шума значительно уменьшает этот эффект.
\end_layout

\begin_layout Standard
Автоматическая регулировка усиления (AGC) это функция которая имеет дело
 с тем, что записываемая громкость может варьироваться в широких пределах
 между различными установками.
 AGC предоставляет способ выравнивания сигнала относительно опорного значения
 громкости.
 Это полезно для VoIP потому как оно устраняет необходимость ручной регулировки
 микрофонного усиления.
 Второе преимущество в том что устанавливая усиление микрофона на умеренном
 (низком) уровне легче избежать ограничения сигнала.
\end_layout

\begin_layout Standard
Определение отсутствия голосового сигнала предоставляемая препроцессором
 более функциональная, чем подобная функция предоставляемая кодеком.
\end_layout

\begin_layout Section
Адаптивный буфер колебаний задержки
\end_layout

\begin_layout Standard
При передаче голоса (или любого другого содержимого в данном случае) через
 UDP или RTP, пакет может быть потерян, прийти с другой задержкой, или даже
 не прийти вовсе.
 Цель буфера колебаний задержки состоит в упорядочивании пакетов и их буферизаци
я должна быть достаточно долгой (но не дольше чем необходимо) для того,
 чтобы их можно было отправить для декодирования.
\end_layout

\begin_layout Section
Акустическое подавление эха
\end_layout

\begin_layout Standard
В любой системе громкой связи речь от удаленного источника воспроизводится
 локальными динамиками, распространяется по комнате и записывается микрофоном.
 Если звук, полученный микрофоном, отправляется непосредственно на удаленную
 конечную точку, тогда пользователь услышит эхо своего голоса.
 Акустический эхо-компенсатор создан для того, чтобы убрать акустическое
 эхо до того как оно отправится на удаленную конечную точку.
 Для тех кто много беспокоится о задержках следует заметить что в отличии
 от кодека Speex, устройство передискретизации и препроцессор, и данный
 акустический эхо-компенсатор не вносит какой либо заметной задержки.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename echo_path.eps
	width 10cm

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Акустическая модель эха
\begin_inset CommandInset label
LatexCommand label
name "fig:Acoustic-echo-model"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Устройство передискретизации
\end_layout

\begin_layout Standard
В некоторых случаях может быть полезным конвертирование звука из одной частоты
 дискретизации в другую.
 Существует несколько причин для этого.
 Это может использоваться для смешивания потоков у которых разные частоты
 дискретизации, для поддержки частот дискретизации, не поддерживаемых звуковой
 картой, для перекодировки, и т.д.
 Поэтому теперь устройство передискретизации это часть проекта Speex.
 Данное устройство может быть использовано для конвертирования между любыми
 двумя произвольными частотами дискретизации (соотношение должно быть рациональн
ым числом), а также существует контроль над соотношением сложности и качества.
 Помните что устройство передискретизации вводит некоторую задержку в звуковой
 поток, чей размер зависит от установки сложности устройства передискретизации.
 Обратитесь к документации на API для того чтобы узнать как получить точные
 значения задержек.
\end_layout

\begin_layout Section
Интеграция
\end_layout

\begin_layout Standard
Знание о том как использовать каждый из компонентов не настолько полезно,
 если мы не знаем где их использовать.
 Рисунок 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Integration-VoIP"

\end_inset

 показывает где каждый из компонентов может быть использован в типичном
 VoIP клиенте.
 Компоненты из пунктирных линий опциональны, хотя они могут быть полезны
 при некоторых обстоятельствах.
 Существует несколько моментов, о которых следует здесь упомянуть.
 AEC должен быть размещен настолько близко насколько это возможно к воспроизводя
щей цепи и цепи захвата.
 Только передискретизация может быть расположена него.
 Также очень важно использовать одинаковое тактирование для захвата с микрофона
 и воспроизведения на динамиках/наушниках.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename components.eps
	width 80text%

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Интеграция всех компонентов в VoIP клиенте.
\begin_inset CommandInset label
LatexCommand label
name "fig:Integration-VoIP"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Компилирование и портирование
\end_layout

\begin_layout Standard
Компилирование Speex под UNIX/Linux или множестве других платформ поддерживающих
 autoconf (например Win32/cygwin) с легкостью осуществляется путем написания:
\end_layout

\begin_layout LyX-Code
% ./configure [options]
\end_layout

\begin_layout LyX-Code
% make
\end_layout

\begin_layout LyX-Code
% make install
\end_layout

\begin_layout Standard
Опции, поддерживаемые конфигурационным сценарием:
\end_layout

\begin_layout Description
--prefix=<path> Определяет путь установки Speex (например /usr)
\end_layout

\begin_layout Description
--enable-shared/--disable-shared Компилировать или не компилировать разделяемые
 библиотеки
\end_layout

\begin_layout Description
--enable-static/--disable-static Компилировать или не компилировать статические
 библиотеки
\end_layout

\begin_layout Description
--disable-wideband Отключить широкополосную часть Speex (обычно для экономии
 памяти)
\end_layout

\begin_layout Description
--enable-valgrind Enable extra hit for valgrind for debugging purposes (не
 используется по умолчанию)
\end_layout

\begin_layout Description
--enable-sse Включить использование инструкций SSE (только для x86/float)
\end_layout

\begin_layout Description
--enable-fixed-point
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
fixed-point
\end_layout

\end_inset

 Компилировать для процессора без (FPU)
\end_layout

\begin_layout Description
--enable-arm4-asm Включить ассемблерную оптимизацию для архитектуры ARMv4
 (только для gcc)
\end_layout

\begin_layout Description
--enable-arm5e-asm Включить ассемблерную оптимизацию для архитектуры ARMv5E
 (только для gcc)
\end_layout

\begin_layout Description
--enable-fixed-point-debug Используется только для отладки целочисленного
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
fixed-point
\end_layout

\end_inset

 кода (очень медленная)
\end_layout

\begin_layout Description
--enable-ti-c55x Включить поддержку семейства TI C5x
\end_layout

\begin_layout Description
--enable-blackfin-asm Включить ассемблерную оптимизацию для архитектуры
 Blackfin DSP (только для gcc)
\end_layout

\begin_layout Section
Платформы
\end_layout

\begin_layout Standard
Speex известен как компилируемый и работающий на множестве платформ и архитектур
, для чисел с плавающей точкой и фиксированной точкой.
 В целом, любая архитектура, которая изначально может осуществлять умножение
 для двух знаковых 16 разрядных чисел (с 32-х битным результатом) и работать
 на достаточной тактовой частоте способна запустить Speex.
 Архитектуры на которых замечена работоспособность Speex (может работать
 на множестве других):
\end_layout

\begin_layout Itemize
x86 & x86-64
\end_layout

\begin_layout Itemize
Power
\end_layout

\begin_layout Itemize
SPARC
\end_layout

\begin_layout Itemize
ARM
\end_layout

\begin_layout Itemize
Blackfin
\end_layout

\begin_layout Itemize
Coldfire (семейство 68k)
\end_layout

\begin_layout Itemize
TI C54xx & C55xx
\end_layout

\begin_layout Itemize
TI C6xxx
\end_layout

\begin_layout Itemize
TriMedia (экспериментально)
\end_layout

\begin_layout Standard
Операционные системы на которых на которых замечена работоспособность Speex
 включают в себя (может работать на множестве других):
\end_layout

\begin_layout Itemize
Linux
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mu$
\end_inset

Clinux
\end_layout

\begin_layout Itemize
MacOS X
\end_layout

\begin_layout Itemize
BSD
\end_layout

\begin_layout Itemize
Остальные UNIX/POSIX системы
\end_layout

\begin_layout Itemize
Symbian
\end_layout

\begin_layout Standard
Директория с исходным кодом включает в себя дополнительную информацию о
 компилировании на определенных архитектурах и операционных системах в файлах
 README.xxx.
\end_layout

\begin_layout Section
Портирование и оптимизация
\end_layout

\begin_layout Standard
Здесь описаны некоторые моменты, рассматриваемые при портировании или оптимизаци
и Speex для новой или уже существующей платформы.
\end_layout

\begin_layout Subsection
Оптимизация программы
\end_layout

\begin_layout Standard
Единственный фактор который значительно влияет на использование процессора
 кодеком Speex состоит в том, скомпилирован ли он для вычислений с плавающей
 точкой или с фиксированной.
 Если ваш ЦПУ/ЦСП не имеет модуля обработки чисел с плавающей точкой, тогда
 скомпилированный с фиксированной точкой кодек будет на порядки быстрее.
 На x86 архитектуре, вариант с плавающей точкой 
\series bold
в основном
\series default
 быстрее, но не всегда.
 Для того, чтобы скомпилировать целочисленный вариант Speex, необходимо
 передать параметр --fixed-point конфигурационному сценарию или определить
 макрос FIXED_POINT для компилятора.
 По состоянию на 1.2beta3, теперь появилась возможность выключить API совместимос
ти с плавающей точкой, это означает, что программа будет подключаться без
 библиотеки эмуляции плавающей точки.
 Для того чтобы это сделать, запустите конфигурацию с параметром --disable-float
-api или определите макрос DISABLE_FLOAT_API.
 До тех пор пока функция VBR не портирована для целочисленного варианта,
 вам также необходимо запускать конфигурацию с параметром --disable-vbr
 или определить макрос DISABLE_VBR.
\end_layout

\begin_layout Standard
Остальные важные моменты, которые необходимо проверить на некоторых архитектурах
 сигнальных процессоров:
\end_layout

\begin_layout Itemize
Убедитесь в том что кэш установлен в режим с отложенной записью
\end_layout

\begin_layout Itemize
Если чип имеет статическое ОЗУ вместо кэша, убедитесь сколько кода и данных
 содержится в статическом ОЗУ, а не в ОЗУ
\end_layout

\begin_layout Standard
Если вы собираетесь писать на ассемблере, следующие функции обычно необходимо
 рассматривать для оптимизации в первую очередь:
\end_layout

\begin_layout Itemize
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

filter_mem16()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

iir_mem16()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

vq_nbest()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

pitch_xcorr()
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

interp_pitch()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Функции фильтров 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

filter_mem16()
\end_layout

\end_inset

 и 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

iir_mem16()
\end_layout

\end_inset

 реализованы в виде транспонированной прямой формы второго типа (DF2T).
 Хотя для архитектур, основанных умножении с накоплением (MAC), DF2T требует
 частой перезагрузки аккумулятора, что может сделать программу очень медленной.
 Для данных архитектур (т.е.
 Blackfin и Coldfire), лучший подход состоит в применении первой прямой
 формы (DF1), который проще выражается в элементах MAC.
 Важно убедиться в том, реализация DF1 ведет себя также как оригинальная
 реализация DF2T при записи значений в память.
 Это необходимо потому что фильтр меняющийся во времени и должен вычислить
 точно такое же значение (без учета ошибки округления) на кодировщике и
 декодировщике.
 
\end_layout

\begin_layout Subsection
Оптимизация памяти
\end_layout

\begin_layout Standard
Оптимизация памяти это то, что большей частью должно учитываться для малых
 встраиваемых платформ.
 Для ПК Speex уже настолько мал что не стоит делать вещей предлагаемых здесь.
 Существует несколько способов уменьшить использование памяти в Speex, как
 для объема кода, так и для объема данных.
 Для оптимизации объема кода трюк состоит в удалении ненужных вам функций.
 Некоторые функции могут быть с легкостью удалены если вы не нуждаетесь
 в них:
\end_layout

\begin_layout Itemize
Поддержка широкополосного режима (--disable-wideband)
\end_layout

\begin_layout Itemize
Поддержка стерео (удаление stereo.c)
\end_layout

\begin_layout Itemize
поддержка VBR (--disable-vbr или DISABLE_VBR)
\end_layout

\begin_layout Itemize
Статические кодовые таблицы которые не нужны, для битрейтов, которые вы
 не используете (*_table.c files)
\end_layout

\begin_layout Standard
У Speex также имеется несколько методов для размещения временных массивов.
 При использовании компилятора, который поддерживает C99 (по состоянию на
 2007 год, компиляторы Microsoft не поддерживают, но gcc поддерживает),
 лучше всего будет определить VAR_ARRAYS.
 Это разрешит использование функции массивов переменной длины C99.
 Следующим полезным шагом является определение USE_ALLOCA, в этом случае
 Speex будет использовать alloca() для выделения памяти для временных массивов.
 Заметим что во множестве систем, alloca() работает с ошибками и может не
 работать вовсе.
 Если VAR_ARRAYS и USE_ALLOCA не определены, тогда Speex возвращается к
 выделению больших 
\begin_inset Quotes eld
\end_inset

временных областей
\begin_inset Quotes erd
\end_inset

 и внутреннему разделению выделенной памяти.
 Основной недостаток данного решения состоит в том что оно требует много
 ресурсов.
 Необходимо выделить достаточно памяти для худшего сценария (худший битрейт,
 наивысший параметр сложности, ...) и по умолчанию память не разделяется между
 множеством состояний кодировщика/декодировщика.
 Тем не менее, если ручное выделение памяти является единственным оставшимся
 вариантом, существует несколько моментов, которые могут быть улучены.
 Переопределяя вызов функции the speex_alloc_scratch() в os_support.h, зачастую
 можно возвращать одну и ту же память для всех состояний
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
В этом случае нужно быть осторожным с потоками
\end_layout

\end_inset

.
 Вдобавок к этому, переопределением NB_ENC_STACK и NB_DEC_STACK (или подобных
 для широкополосного режима), возможно выделить память только для того сценария,
 который известен ранее.
 В этом случае важно измерить количество памяти необходимого для определенной
 частоты выборок, битрейта и уровня сложности который используется.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Консольные кодировщик и декодировщик
\begin_inset CommandInset label
LatexCommand label
name "sec:Command-line-encoder/decoder"

\end_inset


\end_layout

\begin_layout Standard
Базовый дистрибутив Speex включает в себя консольный кодировщик (
\emph on
speexenc
\emph default
) и декодировщик (
\emph on
speexdec
\emph default
).
 Эти инструменты создают и читают файлы Speex, упакованные в контейнере
 Ogg.
 Хотя возможно инкапсулировать Speex в любой контейнер, Ogg является рекомендуем
ым контейнером для подобных файлов.
 Данный раздел рассказывает о том, как использовать инструменты командной
 строки для файлов Speex в контейнере Ogg.
\end_layout

\begin_layout Section

\emph on
speexenc
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
speexenc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Утилита 
\emph on
speexenc
\emph default
 используется для создания файлов Speex из raw PCM или wave файлов.
 Функцией можно воспользоваться путем вызова: 
\end_layout

\begin_layout LyX-Code
speexenc [опции] входной_файл выходной_файл
\end_layout

\begin_layout Standard
Значение '-' для входного_файла или выходного_файла соответствует stdin
 и stdout соответственно.
 Доступны следующие опции:
\end_layout

\begin_layout Description
--narrowband
\begin_inset space ~
\end_inset

(-n) Включает обработку входного потока как узкополосного (8 кГц).
 Эта опция установлена по умолчанию.
\end_layout

\begin_layout Description
--wideband
\begin_inset space ~
\end_inset

(-w) Включает обработку входного потока как широкополосного (16 кГц).
\end_layout

\begin_layout Description
--ultra-wideband
\begin_inset space ~
\end_inset

(-u) Включает обработку входного потока как ультра широкополосного (8 кГц).
\end_layout

\begin_layout Description
--quality
\begin_inset space ~
\end_inset

n Устанавливает качество кодирования (0-10), по умолчанию 8
\end_layout

\begin_layout Description
--bitrate
\begin_inset space ~
\end_inset

n Кодируемый битрейт (использует bit-rate n или ниже) 
\end_layout

\begin_layout Description
--vbr Включить VBR (переменный битрейт), по умолчанию отключен
\end_layout

\begin_layout Description
--abr
\begin_inset space ~
\end_inset

n Включить ABR (средний битрейт) равный n кбит/с, по умолчанию отключен
\end_layout

\begin_layout Description
--vad Включить VAD (определение присутствия голосового сигнала), по умолчанию
 отключен
\end_layout

\begin_layout Description
--dtx Включить DTX (прерывистая передача), по умолчанию отключена
\end_layout

\begin_layout Description
--nframes
\begin_inset space ~
\end_inset

n Упаковывать n кадров в каждый Ogg пакет (это экономит память на низких
 битрейтах)
\end_layout

\begin_layout Description
--comp
\begin_inset space ~
\end_inset

n Установить соотношение скорости/качества.
 Более высокое значение n замедляет кодирование (по умолчанию 3)
\end_layout

\begin_layout Description
-V Подробный режим, показывает битрейт, используемый в данный момент
\end_layout

\begin_layout Description
--help
\begin_inset space ~
\end_inset

(-h) Вывести на экран помощь
\end_layout

\begin_layout Description
--version
\begin_inset space ~
\end_inset

(-v) Показать информацию о версии ПО
\end_layout

\begin_layout Subsection*
Комментарии Speex
\end_layout

\begin_layout Description
--comment Добавить данную строку как дополнительный комментарий.
 Может быть использовано несколько раз.
 
\end_layout

\begin_layout Description
--author Автор трека.
\end_layout

\begin_layout Description
--title Заголовок трека.
 
\end_layout

\begin_layout Subsection*
Опции входных raw файлов
\end_layout

\begin_layout Description
--rate
\begin_inset space ~
\end_inset

n Частота дискретизации входного потока
\end_layout

\begin_layout Description
--stereo Рассматривать входной поток как стерео
\end_layout

\begin_layout Description
--le Входной поток с прямым порядком бит 
\end_layout

\begin_layout Description
--be Входной поток с обратным порядком бит 
\end_layout

\begin_layout Description
--8bit Входной поток 8 бит беззнаковый
\end_layout

\begin_layout Description
--16bit Входной поток 16 бит знаковый
\end_layout

\begin_layout Section

\emph on
speexdec
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
speexdec
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Утилита 
\emph on
speexdec
\emph default
 используется для декодирования файлов Speex и может быть использована путем
 вызова: 
\end_layout

\begin_layout LyX-Code
speexdec [опции] speex_файл [выходной_файл]
\end_layout

\begin_layout Standard
Значение '-' для speex_файл или выходной_файл соответствует stdin и stdout.
 Также, когда не определен выходной файл, файл воспроизводится через звуковую
 карту.
 Доступны следующие опции:
\end_layout

\begin_layout Description
--enh Включить фильтр (значение по умолчанию)
\end_layout

\begin_layout Description
--no-enh Выключить фильтр
\end_layout

\begin_layout Description
--force-nb Установить декодирование в узкополосном режиме 
\end_layout

\begin_layout Description
--force-wb Установить декодирование в широкополосном режиме 
\end_layout

\begin_layout Description
--force-uwb Установить декодирование в ультра широкополосном режиме
\end_layout

\begin_layout Description
--mono Установить декодирование в режиме моно 
\end_layout

\begin_layout Description
--stereo Установить декодирование в режиме стерео 
\end_layout

\begin_layout Description
--rate
\begin_inset space ~
\end_inset

n Установить декодирование на частоте дискретизации n Гц
\end_layout

\begin_layout Description
--packet-loss
\begin_inset space ~
\end_inset

n Имитировать n % случайной потери пакетов
\end_layout

\begin_layout Description
-V Подробный режим, показывает битрейт, используемый в данный момент
\end_layout

\begin_layout Description
--help
\begin_inset space ~
\end_inset

(-h) Вывести на экран помощь
\end_layout

\begin_layout Description
--version
\begin_inset space ~
\end_inset

(-v) Показать информацию о версии ПО
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Использование API кодека Speex (
\emph on
libspeex
\emph default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
libspeex
\end_layout

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "sec:Programming-with-Speex"

\end_inset


\end_layout

\begin_layout Standard
Библиотека 
\emph on
libspeex
\emph default
 содержит все функции для кодирования и декодирования речи с использованием
 кодека Speex.
 При подключении в операционных системах UNIX необходимо добавить 
\emph on
-lspeex -lm
\emph default
 в командную строку компилятора.
 Одна важная вещь которую необходимо знать, это то что вызовы функций libspeex
 могут быть сделаны повторно, 
\series bold
но при этом данная библиотека не ориентирована на многопоточное исполнение
\series default
.
 Это означает, что нужно быть осторожным при вызове из нескольких потоков,
 но 
\series bold
вызовы использующие одинаковое состояние из нескольких потоков должны быть
 защищены мьютексами
\series default
.
 Примеры программ также могут быть найдены в приложении 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Sample-code"

\end_inset

 и полная документация по API включена в раздел Documentation на сайте Speex
 (http://www.speex.org/).
\end_layout

\begin_layout Section
Кодирование
\begin_inset CommandInset label
LatexCommand label
name "sub:Encoding"

\end_inset


\end_layout

\begin_layout Standard
Для того, чтобы кодировать речь с использованием Speex, во-первых необходимо:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#include <speex/speex.h>
\end_layout

\end_inset

Далее в программе должна быть объявлена структура упаковщика битов Speex
 вместе с переменной состояния кодировщика Speex:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SpeexBits bits;
\end_layout

\begin_layout Plain Layout

void *enc_state;
\end_layout

\end_inset

Во вторых, для инициализации:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_bits_init(&bits);
\end_layout

\begin_layout Plain Layout

enc_state = speex_encoder_init(&speex_nb_mode);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Для широкополосного режима, 
\emph on
speex_nb_mode
\emph default
 должна быть заменена 
\emph on
speex_wb_mode
\emph default
.
 В большинстве случаев, вам необходимо знать размер кадра при используемой
 вами частоте дискретизации.
 Вы можете получить это значение через переменную 
\emph on
frame_size
\emph default
 (выраженную в выборках, а не в байтах) с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_encoder_ctl(enc_state,SPEEX_GET_FRAME_SIZE,&frame_size);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
На практике, 
\emph on
frame_size
\emph default
 должен соответствовать 20 миллисекундам при использовании частоты дискретизации
 в 8, 16, или 32 кГц.
 Существует множество параметров, которые должны быть установлены для кодировщик
а Speex, но наиболее полезный из них это параметр качества, который контролирует
 соотношение между качеством и битрейтом.
 Он устанавливается с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_encoder_ctl(enc_state,SPEEX_SET_QUALITY,&quality);
\end_layout

\end_inset

где 
\emph on
quality
\emph default
 это целое число между 0 и 10 (включительно).
 Соотношение между качеством и битрейтом показано на рисунке 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:quality_vs_bps"

\end_inset

 для узкополосного режима.
\end_layout

\begin_layout Standard
После того как инициализация произведена, для каждого входящего кадра:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_bits_reset(&bits);
\end_layout

\begin_layout Plain Layout

speex_encode_int(enc_state, input_frame, &bits);
\end_layout

\begin_layout Plain Layout

nbBytes = speex_bits_write(&bits, byte_ptr, MAX_NB_BYTES);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
где 
\emph on
input_frame
\emph default
 это 
\emph on
(
\emph default
short 
\emph on
*)
\emph default
 указатель на начало речевого кадра, 
\emph on
byte_ptr
\emph default
 это 
\emph on
(char *)
\emph default
 это указатель на начало закодированного кадра, 
\emph on
MAX_NB_BYTES
\emph default
 это максимальное число байт, которые могут быть записаны в 
\emph on
byte_ptr,
\emph default
 не вызывая переполнения стека, и 
\emph on
nbBytes
\emph default
 это число байт, которое записано в 
\emph on
byte_ptr
\emph default
 (размер закодированного кадра в байтах).
 До вызова speex_bits_write, можно определить количество байт, которые будут
 записаны, с помощью вызова 
\family typewriter
speex_bits_nbytes(&bits)
\family default
, которая возвращает количество байт.
\end_layout

\begin_layout Standard
Возможно использование функции 
\emph on
speex_encode()
\emph default
, которая использует 
\emph on
(float *)
\emph default
 для звука.
 Хотя это может сделать порт на платформу без модуля обработки операций
 с плавающей точкой (например ARM) более медленным.
 Внутренне 
\emph on
speex_encode()
\emph default
 и 
\emph on
speex_encode_int()
\emph default
 работают одинаково.
 Использование кодировщиком целочисленного варианта или варианта с плавающей
 точкой определяется только флагами компилятора, а не на уровне API.
\end_layout

\begin_layout Standard
После того, как вы выполнили кодирование, освободите ресурсы через:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_bits_destroy(&bits);
\end_layout

\begin_layout Plain Layout

speex_encoder_destroy(enc_state);
\end_layout

\end_inset


\end_layout

\begin_layout Section
Декодирование
\begin_inset CommandInset label
LatexCommand label
name "sub:Decoding"

\end_inset


\end_layout

\begin_layout Standard
Для декодирования речи с использованием Speex, сначала вам нужно:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#include <speex/speex.h>
\end_layout

\end_inset

Также необходимо объявить структуру
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SpeexBits bits;
\end_layout

\end_inset

и переменную состояния декодера 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void *dec_state;
\end_layout

\end_inset

Они инициализируются с помощью:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_bits_init(&bits);
\end_layout

\begin_layout Plain Layout

dec_state = speex_decoder_init(&speex_nb_mode);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Для широкополосного режима, 
\emph on
speex_nb_mode
\emph default
 должна быть заменена 
\emph on
speex_wb_mode
\emph default
.
 В большинстве случаев, вам необходимо знать размер кадра при используемой
 вами частоте дискретизации.
 Вы можете получить это значение через переменную 
\emph on
frame_size
\emph default
 (выраженную в выборках, а не байтах) с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_decoder_ctl(dec_state, SPEEX_GET_FRAME_SIZE, &frame_size);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Также существует параметр, который должен быть установлен для декодировщика:
 используется ли перцепционный усилитель или нет.
 Он должен быть установлен с помощью: 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_decoder_ctl(dec_state, SPEEX_SET_ENH, &enh);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
где 
\emph on
enh
\emph default
 целое значение равное 0 для выключения усилителя и 1 для включения.
 Для 1.2-beta1, по умолчанию он включен.
\end_layout

\begin_layout Standard
Опять, после того как инициализация декодера завершена, для каждого входящего
 кадра:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_bits_read_from(&bits, input_bytes, nbBytes);
\end_layout

\begin_layout Plain Layout

speex_decode_int(dec_state, &bits, output_frame);
\end_layout

\end_inset

где input_bytes это 
\emph on
(char *)
\emph default
 содержащий потоковые данные для одного кадра, 
\emph on
nbBytes
\emph default
 размер (в байтах) этого потока, и 
\emph on
output_frame
\emph default
 это 
\emph on
(short *)
\emph default
 которое указывает на область, в которой будут записаны декодированные речевые
 кадры.
 Значение NULL в качестве второго аргумента показывает что у нас нету данных
 для текущего кадра.
 Когда кадр теряется, декодер Speex пытается угадать правильный сигнал.
\end_layout

\begin_layout Standard
Как и для кодировщика, функция 
\emph on
speex_decode()
\emph default
 также может быть использована с 
\emph on
(float *),
\emph default
 как выходными данными для звука.
 После того как вы завершили декодирование, освободите все ресурсы с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_bits_destroy(&bits);
\end_layout

\begin_layout Plain Layout

speex_decoder_destroy(dec_state);
\end_layout

\end_inset


\end_layout

\begin_layout Section
Опции кодека (speex_*_ctl)
\begin_inset CommandInset label
LatexCommand label
name "sub:Codec-Options"

\end_inset


\end_layout

\begin_layout Quote
\align center

\emph on
Entities should not be multiplied beyond necessity – William of Ockham.
 
\end_layout

\begin_layout Quote
\align center

\emph on
Just because there’s an option for it doesn’t mean you have to turn it on
 – me.
 
\end_layout

\begin_layout Standard
Кодировщик и декодировщик Speex поддерживают множество опций и запросов,
 которые могут быть доступны через функции
\emph on
 speex_encoder_ctl
\emph default
 и 
\emph on
speex_decoder_ctl
\emph default
.
 Эти функции схожи с системными вызовами 
\emph on
ioctl
\emph default
 и их прототипы имеют следующий вид:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void speex_encoder_ctl(void *encoder, int request, void *ptr);
\end_layout

\begin_layout Plain Layout

void speex_decoder_ctl(void *encoder, int request, void *ptr);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Несмотря на наличие этих функций, значения по умолчанию обычно подходят
 для большинства приложений и опциональные настройки 
\series bold
могут быть использованы только тогда, когда вы понимаете что они означают,
 и знаете для чего они вам нужны.

\series default
 Основная ошибка состоит в попытке установить множество ненужных настроек.
 
\end_layout

\begin_layout Standard
Здесь представлен список значений, применяемых для запросов.
 Некоторые из них применяются только для кодировщика или декодировщика.
 Потому как последний аргумент имеет тип 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

void *
\end_layout

\end_inset

, функции 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

_ctl()
\end_layout

\end_inset

 не типобезопасны, таким образом вы должны их использовать с осторожностью.
 Тип 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 это тип 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

int32_t
\end_layout

\end_inset

 в C99.
\end_layout

\begin_layout Description
SPEEX_SET_ENH
\begin_inset Formula $\ddagger$
\end_inset

 Установить перцепционный усилитель
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
perceptual enhancement
\end_layout

\end_inset

 для включения (1) или (0) для того чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

, по умолчанию включен)
\end_layout

\begin_layout Description
SPEEX_GET_ENH
\begin_inset Formula $\ddagger$
\end_inset

 Получить статус перцепционного усилителя (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_GET_FRAME_SIZE Получить количество выборок на кадр текущем режиме
 (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_SET_QUALITY
\begin_inset Formula $\dagger$
\end_inset

 Установить качество кодируемой речи (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 от 0 до 10, по умолчанию 8)
\end_layout

\begin_layout Description
SPEEX_GET_QUALITY
\begin_inset Formula $\dagger$
\end_inset

 Получить текущее значение качества кодируемой речи (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 от 0 до 10)
\end_layout

\begin_layout Description
SPEEX_SET_MODE
\begin_inset Formula $\dagger$
\end_inset

 Установить режим под номером, как определено в RTP спецификации (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_GET_MODE
\begin_inset Formula $\dagger$
\end_inset

 Получить режим под номером, как определено в RTP спецификации (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_SET_VBR
\begin_inset Formula $\dagger$
\end_inset

 Установить переменный битрейт (VBR) (1) чтобы включить, (0) чтобы выключить
 (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

, по умолчанию выключен)
\end_layout

\begin_layout Description
SPEEX_GET_VBR
\begin_inset Formula $\dagger$
\end_inset

 Получить статус переменного битрейта 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
variable bit-rate
\end_layout

\end_inset

 (VBR) (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_SET_VBR_QUALITY
\begin_inset Formula $\dagger$
\end_inset

 Установить качество кодируемой речи при включенном VBR (float 0.0 до 10.0,
 по умолчанию 8.0)
\end_layout

\begin_layout Description
SPEEX_GET_VBR_QUALITY
\begin_inset Formula $\dagger$
\end_inset

 Получить значение качества кодируемой речи при включенном VBR (float от
 0 до 10)
\end_layout

\begin_layout Description
SPEEX_SET_COMPLEXITY
\begin_inset Formula $\dagger$
\end_inset

 Установить ресурсы ЦПУ, разрешенные для кодировщика (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 от 1 до 10, по умолчанию 2)
\end_layout

\begin_layout Description
SPEEX_GET_COMPLEXITY
\begin_inset Formula $\dagger$
\end_inset

 Получить ресурсы ЦПУ, разрешенные для кодировщика (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 от 1 до 10)
\end_layout

\begin_layout Description
SPEEX_SET_BITRATE
\begin_inset Formula $\dagger$
\end_inset

 Установить битрейт, использует ближайшее значение, не превышающее параметр
 (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в битах в секунду)
\end_layout

\begin_layout Description
SPEEX_GET_BITRATE Получить текущий используемый битрейт (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в битах в секунду)
\end_layout

\begin_layout Description
SPEEX_SET_SAMPLING_RATE Установить частоту дискретизации (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в Гц)
\end_layout

\begin_layout Description
SPEEX_GET_SAMPLING_RATE Получить частоту дискретизации (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в Гц)
\end_layout

\begin_layout Description
SPEEX_RESET_STATE Сбросить состояние кодировщика/декодировщика, стирает
 всю память (без аргумента)
\end_layout

\begin_layout Description
SPEEX_SET_VAD
\begin_inset Formula $\dagger$
\end_inset

 Установить значение определения присутствия голосового сигнала
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
voice activity detection
\end_layout

\end_inset

 (VAD), (1) чтобы включить, (0) чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

, по умолчанию выключен)
\end_layout

\begin_layout Description
SPEEX_GET_VAD
\begin_inset Formula $\dagger$
\end_inset

 Получить статус определения присутствия голосового сигнала (VAD) (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_SET_DTX
\begin_inset Formula $\dagger$
\end_inset

 Установить прерывистую передачу 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
discontinuous transmission
\end_layout

\end_inset

 (DTX), (1) чтобы включить, (0) чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

, по умолчанию выключен)
\end_layout

\begin_layout Description
SPEEX_GET_DTX
\begin_inset Formula $\dagger$
\end_inset

 Получить статус прерывистой передачи (DTX) (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_SET_ABR
\begin_inset Formula $\dagger$
\end_inset

 Установить значение среднего битрейта при 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
average bit-rate
\end_layout

\end_inset

 (ABR) в бит в секунду (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в битах в секунду)
\end_layout

\begin_layout Description
SPEEX_GET_ABR
\begin_inset Formula $\dagger$
\end_inset

 Получить значение среднего битрейта при (ABR) (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в битах в секунду)
\end_layout

\begin_layout Description
SPEEX_SET_PLC_TUNING
\begin_inset Formula $\dagger$
\end_inset

 Сказать кодировщику оптимизировать кодирование для определенного процента
 потери пакетов (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в процентах)
\end_layout

\begin_layout Description
SPEEX_GET_PLC_TUNING
\begin_inset Formula $\dagger$
\end_inset

 Получить текущее значение PLC (
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в процентах)
\end_layout

\begin_layout Description
SPEEX_GET_LOOKAHEAD Возвращает lookahead используемый Speex отдельно для
 кодировщика и декодировщика.
 Сумма значений lookahead кодировщика и декодировщика это общее значение
 lookahead.
\end_layout

\begin_layout Description
SPEEX_SET_VBR_MAX_BITRATE
\begin_inset Formula $\dagger$
\end_inset

 Установить максимальный битрейт допустимый при использовании VBR (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в битах в секунду)
\end_layout

\begin_layout Description
SPEEX_GET_VBR_MAX_BITRATE
\begin_inset Formula $\dagger$
\end_inset

 Получить максимальный битрейт допустимый при использовании VBR (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

 в битах в секунду)
\end_layout

\begin_layout Description
SPEEX_SET_HIGHPASS Установить фильтр верхних частот в (1) или выключить
 (0) (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

, по умолчанию включен)
\end_layout

\begin_layout Description
SPEEX_GET_HIGHPASS Получить текущий статус фильтра верхних частот (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
\begin_inset Formula $\dagger$
\end_inset

 применяются только для кодировщика
\end_layout

\begin_layout Description
\begin_inset Formula $\ddagger$
\end_inset

 применяются только для декодировщика
\end_layout

\begin_layout Section
Запросы режима
\begin_inset CommandInset label
LatexCommand label
name "sub:Mode-queries"

\end_inset


\end_layout

\begin_layout Standard
Режимы Speex имеют систему запросов похожую на speex_encoder_ctl и speex_decoder
_ctl.
 Так как режимы доступны только для чтения, возможно только получать информацию
 о конкретном режиме.
 Функция осуществляющая это представлена ниже:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

void speex_mode_query(SpeexMode *mode, int request, void *ptr);
\end_layout

\end_inset

Допустимые значения для запросов следующие (если не указано иное, значения
 возвращаются через 
\emph on
ptr
\emph default
):
\end_layout

\begin_layout Description
SPEEX_MODE_FRAME_SIZE Получить размер кадра (в выборках) для режима
\end_layout

\begin_layout Description
SPEEX_SUBMODE_BITRATE Получить битрейт для подрежима определенного через
 
\emph on
ptr
\emph default
 (целое в бит/с).
 
\end_layout

\begin_layout Section
Формирование пакетов и внутридиапазонная связь
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
in-band signalling
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Иногда желательно разместить больше одного кадра на каждый пакет (или другую
 базовую единицу хранения данных).
 Правильный способ сделать это, это вызвать speex_encode 
\begin_inset Formula $N$
\end_inset

 раз до записи потока с помощью speex_bits_write.
 В случаях где количество кадров не определено внеполосным механизмом, возможно
 включить код разделителя.
 Данный разделитель состоит из кода 15 (в десятичной системе счисления)
 закодированного пятью битами, как показано в таблице 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:quality_vs_bps"

\end_inset

.
 Заметим что на момент версии 1.0.2, вызов speex_bits_write автоматически
 вставляет разделитель к моменту заполнения последнего байта.
 Он не включает в себя какого либо заголовка, поэтому убедитесь, что Speex
 всегда определяет момент, когда нет больше кадров в пакете.
\end_layout

\begin_layout Standard
Также возможно отправить внутридиапазонные 
\begin_inset Quotes eld
\end_inset

сообщения
\begin_inset Quotes erd
\end_inset

 другой стороне.
 Все данные сообщения кодируются как псевдо кадры режима 14, который содержит
 4-х битовый код типа сообщения с последующим сообщением.
 Таблица 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:In-band-signalling-codes"

\end_inset

 содержит список допустимых кодов, их значение и размер сообщения, следующего
 после.
 Большинство из этих сообщений это запросы, которые отправляются кодировщику
 или декодировщику на другой конец, который может соблюдать или игнорировать
 их.
 По умолчанию все внутридиапазонные сообщения игнорируются.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="17" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Код
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Размер (бит)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Содержимое
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает у декодировщика установить перцепционное усиление выключенным
 (0) или включенным (1)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает (если 1) у кодировщика быть менее 
\begin_inset Quotes eld
\end_inset

агрессивным
\begin_inset Quotes erd
\end_inset

 к большим потерям пакетов
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает у кодировщика переключится в режим N
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает у кодировщика переключится в режим N для нижнего диапазона
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает у кодировщика переключится в режим N для верхнего диапазона
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает у кодировщика переключится на качество N для VBR
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запросить подтверждение (0=нет, 1=все, 2=только для внутридиапазонных данных)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Запрашивает у кодировщика установить CBR (0), VAD(1), DTX(3), VBR(5), VBR+DTX(7)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Передать (восьмиразрядное) значение в другой конец
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Информация об интенсивности стерео
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Объявить максимально допустимый битрейт (N в байтах в секунду)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Подтверждение приема пакета N
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Коды внутридиапазонной связи
\begin_inset CommandInset label
LatexCommand label
name "cap:In-band-signalling-codes"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Наконец, приложения могут определять собственные внутридиапазонные сообщения,
 используя режим 13.
 Размер сообщения в байтах кодируется пятью битами, так что декодировщик
 может пропустить их, если не знает как их интерпретировать.
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
API обработки звука (
\emph on
libspeexdsp
\emph default
)
\end_layout

\begin_layout Standard
На момент версии 1.2beta3, части пакета Speex, не относящиеся к кодеку, теперь
 расположены в отдельной библиотеке названной 
\emph on
libspeexdsp
\emph default
.
 Данная библиотека включает в себя препроцессор, акустическое подавление
 эха, буфер колебаний задержки, и устройство передискретизации.
 В среде UNIX она может быть подключена к программе путем добавления 
\emph on
-lspeexdsp -lm
\emph default
 в командной строке компилятора.
 Также как и в случае с libspeex, 
\series bold
вызовы libspeexdsp реентрабельны, но не потокобезопасны
\series default
.
 Это означает что нужно быть осторожным при вызове из нескольких потоков,
 но 
\series bold
вызовы, использующие одинаковое состояние из нескольких потоков, должны
 быть защищены мьютексами.
\end_layout

\begin_layout Section
Препроцессор
\begin_inset CommandInset label
LatexCommand label
name "sub:Preprocessor"

\end_inset


\end_layout

\begin_layout Standard
\noindent
Для того, чтобы использовать препроцессор Speex
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
preprocessor
\end_layout

\end_inset

, вам необходимо:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#include <speex/speex_preprocess.h>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
После чего, состояние препроцессора может быть установлено через:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SpeexPreprocessState *preprocess_state = speex_preprocess_state_init(frame_size,
 sampling_rate);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
и рекомендуется использовать те значения 
\family typewriter
frame_size
\family default
, которые использовались для кодировщика (20 мс).
\end_layout

\begin_layout Standard
Для каждого входящего кадра необходимо вызывать:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_preprocess_run(preprocess_state, audio_frame);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
где 
\family typewriter
audio_frame
\family default
 используется и для входного и для выходного потока.
 В случаях, когда нет полезного звука на выходе в текущем кадре, можно использов
ать функцию:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_preprocess_estimate_update(preprocess_state, audio_frame);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Данный вызов обновит все внутренние переменные состояния препроцессора без
 вычисления выходного звука, таким образом экономя ресурсы процессора.
\end_layout

\begin_layout Standard
Поведение препроцессора может быть изменено с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_preprocess_ctl(preprocess_state, request, ptr);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
которая используется так же как её эквивалент для кодировщика и декодировщика.
 Опции описаны в разделе 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Preprocessor-options"

\end_inset

.
\end_layout

\begin_layout Standard
Состояние препроцессора может быть уничтожено с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_preprocess_state_destroy(preprocess_state);
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Опции препроцессора
\begin_inset CommandInset label
LatexCommand label
name "sub:Preprocessor-options"

\end_inset


\end_layout

\begin_layout Standard
Как и в случае с кодеком, препроцессор также имеет опции, которые контролируются
 при помощи ioctl() подобных вызовов.
 Доступны следующие опции:
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_DENOISE Включает шумоподавление, (1) чтобы включить,
 (0) чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_DENOISE Возвращает состояние устройства шумоподавления
 (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_AGC Включает автоматическую регулировку усиления (AGC),
 (1) чтобы включить, (0) чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_AGC Возвращает состояние AGC (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_VAD Включает детектор активности звука (VAD), (1) чтобы
 включить, (0) чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_VAD Возвращает состояние VAD (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_AGC_LEVEL
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_AGC_LEVEL
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_DEREVERB Включает удаление реверберации, (1) чтобы
 включить, (0) чтобы выключить (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_DEREVERB Возвращает состояние удалятора реверберации
 (
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_DEREVERB_LEVEL На данный момент не работает, не используйте
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_DEREVERB_LEVEL На данный момент не работает, не используйте
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_DEREVERB_DECAY На данный момент не работает, не используйте
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_DEREVERB_DECAY На данный момент не работает, не используйте
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_PROB_START
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_PROB_START
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_PROB_CONTINUE
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_PROB_CONTINUE
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_NOISE_SUPPRESS Устанавливает максимальное подавление
 шума в дБ (отрицательное 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_NOISE_SUPPRESS Возвращает максимальное подавление шума
 в дБ (отрицательное 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_ECHO_SUPPRESS Устанавливает максимальное ослабление
 эха в дБ (отрицательное 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_ECHO_SUPPRESS Возвращает максимальное ослабление эха
 в дБ (отрицательное 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_ECHO_SUPPRESS_ACTIVE Устанавливает максимальное ослабление
 эха в дБ, когда когда ближний конец активен (отрицательное 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_ECHO_SUPPRESS_ACTIVE Возвращает максимальное ослабление
 эха в дБ, когда когда ближний конец активен (отрицательное 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

spx_int32_t
\end_layout

\end_inset

)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_SET_ECHO_STATE Устанавливает связанный эхокомпенсатор для
 остаточного подавления эха (указатель или NULL для отключения подавления
 остаточного эха)
\end_layout

\begin_layout Description
SPEEX_PREPROCESS_GET_ECHO_STATE Возвращает связанный эхокомпенсатор (указатель)
\end_layout

\begin_layout Section
Подавление эха
\begin_inset CommandInset label
LatexCommand label
name "sub:Echo-Cancellation"

\end_inset


\end_layout

\begin_layout Standard
Библиотека Speex на данный момент включает в себя алгоритм подавление эха
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
echo cancellation
\end_layout

\end_inset

 подходящий для эхоподавления
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
acoustic echo cancellation
\end_layout

\end_inset

 (AEC).
 В случае использования эхоподавления, в первую очередь необходимо:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#include <speex/speex_echo.h>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
После чего режим эхоподавления должен быть установлен с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SpeexEchoState *echo_state = speex_echo_state_init(frame_size, filter_length);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
где 
\family typewriter
frame_size
\family default
 это количество данных (в выборках), которые необходимо вам обработать сразу,
 и 
\family typewriter
filter_length
\family default
 это размер (в выборках) фильтра подавления эха который вы используете (также
 известен как 
\shape italic
tail length
\shape default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
tail length
\end_layout

\end_inset

).
 Рекомендуется использовать размер кадра кратного 20 мс (или равного размеру
 кадра кодека), и убедитесь в том, что FFT легко выполняется при данном
 размере (степени двойки лучше чем остальные числа).
 Рекомендуемый размер фильтра приблизительно равен одной трети времени отражения
 звука в помещении.
 Например, в маленькой комнате, время отражения звука порядка 300 мс, таким
 образом размер фильтра равный 100 мс (800 выборок при частоте дискретизации
 в 8000 Гц) это правильный выбор.
\end_layout

\begin_layout Standard
После того, как режим подавления эха был остановлен, звук может отрабатываться
 с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_echo_cancellation(echo_state, input_frame, echo_frame, output_frame);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
где 
\family typewriter
input_frame
\family default
 это звук, который зафиксирован микрофоном, 
\family typewriter
echo_frame
\family default
 это сигнал, который воспроизводится динамиками (и должен быть убран) и
 
\family typewriter
output_frame
\family default
 это сигнал с убранным эхо.
 
\end_layout

\begin_layout Standard
Одна важная вещь состоит в соотношении между 
\family typewriter
input_frame
\family default
 и 
\family typewriter
echo_frame
\family default
.
 Важно то, что в любое время любое эхо, которое появляется на входе, было
 отправлено в фильтр эхоподавления как 
\family typewriter
echo_frame
\family default
.
 Другими словами, фильтр эхоподавления не может убрать сигнал, который еще
 не принят.
 С другой стороны, задержка между входным сигналом и сигналом эха должна
 быть достаточно малой, потому как иначе часть фильтра эхоподавления будет
 работать впустую.
 В идеальном случае ваша программа должна выглядеть так:
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

write_to_soundcard(echo_frame, frame_size);
\end_layout

\begin_layout Plain Layout

read_from_soundcard(input_frame, frame_size);
\end_layout

\begin_layout Plain Layout

speex_echo_cancellation(echo_state, input_frame, echo_frame, output_frame);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Если вы хотите в дальнейшем уменьшить эхо, представленное в сигнале, вы
 должны сделать это путем связывания фильтра эхоподавления с препроцессором
 (см.
 раздел 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Preprocessor"

\end_inset

).
 Это осуществляется с помощью вызова:
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

speex_preprocess_ctl(preprocess_state, SPEEX_PREPROCESS_SET_ECHO_STATE,echo_stat
e);
\end_layout

\end_inset

при инициализации.
\end_layout

\begin_layout Standard
На момент версии 1.2-beta2, существует альтернативный, более простой API,
 который может быть использован вместо 
\emph on
speex_echo_cancellation()
\emph default
.
 Когда захват звука и его воспроизведение обрабатывается асинхронно (т.е.
 в разных потоках или с использованием системных вызовов 
\emph on
poll()
\emph default
 или 
\emph on
select()
\emph default
 ), тогда будет сложно отследить, который input_frame пришел с каким из
 echo_frame.
 Вместо этого, контекст или поток воспроизведения может быть просто вызван
 через:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_echo_playback(echo_state, echo_frame);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
каждый раз когда воспроизводится звуковой кадр.
 После чего захват контекста/потока с помощью вызова:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_echo_capture(echo_state, input_frame, output_frame);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
для каждого полученного кадра.
 Внутренне, 
\emph on
speex_echo_playback()
\emph default
 проще буферизирует воспроизводимый кадр, таким образом, этим можно воспользоват
ься, вызвав 
\emph on
speex_echo_capture()
\emph default
 для вызова 
\emph on
speex_echo_cancel()
\emph default
.
 Побочный эффект использования альтернативного API состоит в том, что воспроизво
димый звук задерживается на два кадра, что является нормальной задержкой,
 вызванной звуковой картой.
 Когда захват и воспроизведение синхронизированы, 
\emph on
speex_echo_cancellation()
\emph default
 предпочтительнее, так как предоставляет лучший контроль при точном входном/эхо
 тайминге.
\end_layout

\begin_layout Standard
Состояние эхоподавления может быть удалено с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_echo_state_destroy(echo_state);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Также можно сбросить состояние эхоподавления, таким образом, оно может быть
 использовано повторно без необходимости создания другого состояния, с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

speex_echo_state_reset(echo_state);
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Решение проблем
\end_layout

\begin_layout Standard
Существует несколько вещей, которые могут препятствовать правильной работе
 эхоподавления.
 Одна из них это ошибка (или нечто условно оптимальное) в коде, но существует
 множество других ошибок, на которых вы должны сосредоточиться в первую
 очередь.
\end_layout

\begin_layout Itemize
Использование разных звуковых карт для записи и воспроизведения не будет
 работать, независимо от того, что вы можете подумать.
 Единственное исключение состоит в том, что если две звуковые карты смогут
 зафиксировать их тактовые частоты на одном источнике тактовой частоты.
 Если нет, тогда тактовые частоты всегда будут иметь некоторый дрейф, который
 предотвратит адаптацию фильтра эхоподавления.
\end_layout

\begin_layout Itemize
Задержка между записью и воспроизведением сигналов должна быть минимальной.
 Любой воспроизводимый сигнал должен появиться на воспроизводящем устройстве
 (дальний конец) немного раньше, чем фильтр эхоподавления увидит его в записанно
м сигнале, но чрезмерная задержка подразумевает, что часть фильтра будет
 использовано впустую.
 В худших ситуациях задержка настолько большая, что больше чем длина фильтра,
 в данном случае, никакое эхо не будет подавляться.
\end_layout

\begin_layout Itemize
Когда дело доходит до длины фильтра, длиннее не значит лучше.
 На самом деле, при большей длине фильтра фильтр адаптируется дольше.
 Безусловно, слишком маленькая длина фильтра не достаточна для подавления
 эха, но наиболее распространенная проблема заключается в том что люди устанавли
вают слишком большую длину фильтра и после удивляются тому, что эхо не подавляет
ся.
\end_layout

\begin_layout Itemize
Нелинейные искажения не могут быть (по определению) смоделированы линейным
 адаптивным фильтром, используемым в устройстве эхоподавления, и также не
 могут быть подавлены.
 Используйте хороший звуковой тракт и избежите насыщения/отсечения.
\end_layout

\begin_layout Standard
Также полезно прочесть 
\emph on
Echo Cancellation Demystified
\emph default
 Алексея Фрунзе
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
http://www.embeddedstar.com/articles/2003/7/article20030720-1.html
\end_layout

\end_inset

, которая объясняет фундаментальные принципы эхоподавления.
 Детали алгоритма описанные в статье отличаются, но основные идеи эхоподавления
 через адаптивные фильтры одинаковы.
\end_layout

\begin_layout Standard
На момент версии 1.2beta2, новый инструмент 
\family typewriter
echo_diagnostic.m
\family default
 включен в дистрибутив исходного кода.
 Первым шагом нужно определить DUMP_ECHO_CANCEL_DATA в процессе сборки.
 Это приводит к тому что фильтр эхоподавления автоматически сохраняет сигналы
 ближнего конца, дальнего конца и выходные сигналы в файлы (aec_rec.sw aec_play.sw
 и aec_out.sw).
 Это именно то что AEC получает и выдает.
 Для того чтобы им воспользоваться необходимо:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Matlab"
inline false
status open

\begin_layout Plain Layout

echo_diagnostic('aec_rec.sw', 'aec_play.sw', 'aec_diagnostic.sw', 1024);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Значение 1024 это длина фильтра которая может быть изменена.
 Имеют место быть некоторые (надеюсь) полезные выводимые сообщения и звук
 с подавленным эхом будет сохранен в aec_diagnostic.sw.
 Если даже эти выходные данные плохие(почти нет подавления) возможно имеется
 проблема в процессах воспроизведения или записи.
\end_layout

\begin_layout Section
Буфер колебаний задержки
\end_layout

\begin_layout Standard
Буфер колебаний задержки может быть включен подключением:
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

#include <speex/speex_jitter.h>
\end_layout

\end_inset

 и созданием состояния нового буфера колебаний задержки которое инициализируется
 путем:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

JitterBuffer *state = jitter_buffer_init(step);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
где аргумент 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

step
\end_layout

\end_inset

 это время шага по умолчанию (в единицах временных меток) используется для
 регулирования задержек и реализации маскирования.
 Значение равное 1 всегда правильное, но более высокие значения могут быть
 иногда более удобными.
 Например, если вы способны делать сокрытие только на 20 миллисекундных
 кадрах, нет никакого смысла в буфере колебания задержки, делающего это
 с одной выборкой.
 Другой пример состоит в том, что для видео нет никакого смысла регулировать
 задержку меньшую, чем полный кадр.
 Предоставленное значение может быть изменено после.
\end_layout

\begin_layout Standard
API буфера колебаний задержки основано на типе 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

JitterBufferPacket
\end_layout

\end_inset

 , который определен как:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

typedef struct {
\end_layout

\begin_layout Plain Layout

   char        *data;       /*  Data bytes contained in the packet */
\end_layout

\begin_layout Plain Layout

   spx_uint32_t len;        /*  Length of the packet in bytes */
\end_layout

\begin_layout Plain Layout

   spx_uint32_t timestamp;  /*  Timestamp for the packet */
\end_layout

\begin_layout Plain Layout

   spx_uint32_t span;       /*  Time covered by the packet (timestamp units)
 */ 
\end_layout

\begin_layout Plain Layout

} JitterBufferPacket;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Например, для звука поле timestamp будет равняться тому, что содержится
 в поле timestamp RTP и в span будет количество выборок, закодированных
 в пакете.
 Для узкополосного режима, span будет равняться 160, если только один кадр
 включен в пакет.
 
\end_layout

\begin_layout Standard
Когда приходит пакет, необходимо вставить эти данные в буфер с помощью:
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

JitterBufferPacket packet;
\end_layout

\begin_layout Plain Layout

/* Fill in each field in the packet struct */
\end_layout

\begin_layout Plain Layout

jitter_buffer_put(state, &packet);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Когда декодер готов декодировать пакет, пакет может быть получен путем:
 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

int start_offset;
\end_layout

\begin_layout Plain Layout

err = jitter_buffer_get(state, &packet, desired_span, &start_offset);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Если 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

jitter_buffer_put()
\end_layout

\end_inset

 и 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

jitter_buffer_get()
\end_layout

\end_inset

 вызываются из различных потоков, тогда 
\series bold
вам необходимо защитить состояние буфера колебаний задержки мьютексом.

\series default
 
\end_layout

\begin_layout Standard
Так как буфер колебаний задержки не создан для того, чтобы использовать
 таймер заданный в явном виде, необходимо сообщать о времени непосредственно.
 Это осуществляется путем вызова: 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

jitter_buffer_tick(state);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Это должно осуществляться периодически в воспроизводящем потоке.
 Это будет последним вызовом буфера колебаний задержки перед тем как уйти
 в сон (до тех пор пока больше данные не воспроизводятся).
 В некоторых случаях предпочтительнее использовать 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

jitter_buffer_remaining_span(state, remaining);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Второй аргумент используется для того чтобы указать на то, что мы до сих
 пор храним данные, записанные для воспроизводящего устройства.
 Например, если для звуковой карты требуется 256 выборок (определяется 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

desired_span
\end_layout

\end_inset

), но 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

jitter_buffer_get()
\end_layout

\end_inset

 возвращает 320 выборок, у нас будет 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

remaining=64
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Устройство передискретизации
\end_layout

\begin_layout Standard
Speex включает в себя модуль передискретизации.
 Для того чтобы им воспользоваться, необходимо подключить его заголовочный
 файл:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#include <speex/speex_resampler.h>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Для каждого потока, который должен быть передискретизирован, важно задать
 состояние устройства передискретизации с помощью:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SpeexResamplerState *resampler;
\end_layout

\begin_layout Plain Layout

resampler = speex_resampler_init(nb_channels, input_rate, output_rate, quality,
 &err);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Где 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

nb_channels
\end_layout

\end_inset

 это число каналов, которые будут использованы (или с чередованием или без
 чередования), 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

input_rate
\end_layout

\end_inset

 это частота дискретизации во входном потоке, 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

output_rate
\end_layout

\end_inset

 частота дискретизации в выходном потоке и 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

quality
\end_layout

\end_inset

 это установка требуемого качества (от 0 до 10).
 Параметр качества важен для контроля компромисса между качеством сложностью
 и скрытостью.
 Использование более высоких установок качества обеспечивает меньший шум
 и сглаживание, более высокую сложность и большую скрытость.
 Использование параметра качества равного трем применимо для большинства
 пользователей ПК, качество 10 больше всего рекомендуется для профессиональной
 работы со звуком.
 Качество 0 обычно имеет приемлемый звук (обычно лучший чем полученный с
 использованием передискретизации линейной интерполяцией), но артефакты
 иногда могут быть заметны.
\end_layout

\begin_layout Standard
Передискретизация осуществляется с использованием
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

err = speex_resampler_process_int(resampler, channelID, in, &in_length,
 out, &out_length);
\end_layout

\end_inset

где 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

channelID
\end_layout

\end_inset

 это ID канала который будет обрабатываться.
 Для монофонического потока используется 0.
 Указатель 
\emph on
in
\emph default
 указывает на первую выборку входного буфера выбранного канала и 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

out
\end_layout

\end_inset

 указывает на первую выборку выходного буфера.
 Размер входного и выходного буфера определяется через 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

in_length
\end_layout

\end_inset

 и 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

out_length
\end_layout

\end_inset

 соответственно.
 После завершения эти значения заменяются количеством выборок прочитанных
 и записанных функцией передискретизации.
 Если не произойдёт ошибка или когда все входящие выборки будут прочитаны,
 или когда все исходящие выборки будут записаны (или в обеих случаях одновременн
о).
 Для выборок с плавающей точкой функция 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_process_float()
\end_layout

\end_inset

 ведет себя так же.
\end_layout

\begin_layout Standard
Также возможно обрабатывать несколько каналов одновременно.
 Для того, чтобы это сделать, используйте speex_resampler_process_interleaved_in
t() или 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_process_interleaved_float()
\end_layout

\end_inset

.
 Аргументы такие же, за исключением отсутствия аргумента 
\begin_inset listings
inline true
status collapsed

\begin_layout Plain Layout

channelID
\end_layout

\end_inset

.
 Стоит заметить что параметры длины задаются для каждого канала.
 То есть, если у вас 1024 выборки на каждый из четырех каналов, то необходимо
 передать 1024, а не 4096.
\end_layout

\begin_layout Standard
Передискретизатор позволяет менять качество и входные/выходные частоты дискретиз
ации на лету без ошибок.
 Это может быть реализовано при помощи вызова функций 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_set_quality()
\end_layout

\end_inset

 и 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_set_rate()
\end_layout

\end_inset

.
 Единственный побочный эффект состоит в том, что новый фильтр будет вычислен
 повторно, потребляя множество циклов ЦПУ.
 
\end_layout

\begin_layout Standard
При передискретизации файла зачастую желательно иметь идеальную синхронизацию
 выходного файла с входным.
 Для того, чтобы это реализовать, вызовите 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_skip_zeros()
\end_layout

\end_inset

 
\series bold
до начала 
\series default
вычислений.
 Для приложений, работающих в реальном времени (т.е.
 VoIP), не рекомендуется этого делать, потому как первый кадр процесса будет
 короче из за компенсации задержки (пропущенные нули).
 Вместо этого, в приложениях реального времени вы можете узнать, насколько
 долгая задержка привнесена устройством передискретизации.
 Это может быть осуществлено во время работы программы при помощи функций
 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_get_input_latency()
\end_layout

\end_inset

 и 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_get_output_latency()
\end_layout

\end_inset

.
 Первая функция возвращает задержку, измеренную в выборках при частоте дискретиз
ации входного потока, в то время как вторая - в выборках, измеренных при
 частоте дискретизации выходного потока.
\end_layout

\begin_layout Standard
Для того чтобы уничтожить передискретизатор, вызовите 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

speex_resampler_destroy()
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Циклический буфер
\end_layout

\begin_layout Standard
В некоторых случаях необходимо согласование с компонентами которые используют
 разные размеры блоков.
 Например возможно, что звуковая карта не поддерживает чтение/запись блоками
 по 20 мс или иногда, сложные соотношения передискретизации означают, что
 блоки не всегда имеют одинаковое время.
 В таких случаях необходимо сохранить данные используя циклический буфер.
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Форматы и стандарты
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
standards
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Formats-and-standards"

\end_inset


\end_layout

\begin_layout Standard
Speex может кодировать речь в обеих узкополосном и широкополосном режимах
 и обеспечивая разные битрейты.
 Хотя не все функции необходимы для поддержки в определенной реализации
 или определенном устройстве.
 Для того, чтобы называться совместимой со Speex, реализация должна поддерживать
 основной набор функций.
\end_layout

\begin_layout Standard
Как минимум, все узкополосные режимы работы ДОЛЖНЫ быть поддерживаемы декодировщ
иком.
 Это включает в себя декодирование широкополосного потока узкополосным декодиров
щиком 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Широкополосный битовый поток содержит узкополосный битовый поток, который
 может быть декодирован отдельно
\end_layout

\end_inset

.
 Таким образом, декодировщик ОБЯЗАН кодировать узкополосный поток, и МОЖЕТ
 либо декодировать все широкополосные режимы, либо декодировать встроенную
 узкополосную часть всех режимов (которое включает в себя игнорирование
 битов высоких частот).
\end_layout

\begin_layout Standard
Для кодировщиков, хотя бы один узкополосный или широкополосный режим ДОЛЖЕН
 поддерживаться.
 Основная причина, по которой все режимы кодирования могут не поддерживаться
 состоит в том, что некоторые платформы не смогут обработать сложный кодирующий
 алгоритм некоторых режимов.
\end_layout

\begin_layout Section
Формат полезной нагрузки RTP
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
RTP
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Проект полезной нагрузки в RTP включен в приложении 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:IETF-draft"

\end_inset

 и последняя версия доступна в 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.speex.org/drafts/latest
\end_layout

\end_inset

.
 Этот проект был отправлен (2003/02/26) в Internet Engineering Task Force
 (IETF) и будет обсуждаться на встрече 18 марта в Сан-Франциско.
 
\end_layout

\begin_layout Section
Тип MIME
\end_layout

\begin_layout Standard
Теперь вы можете использовать тип MIME audio/x-speex для Speex-in-Ogg.
 Мы подадим заявку для типа 
\family typewriter
audio/speex
\family default
 в ближайшем будущем.
\end_layout

\begin_layout Section
Формат файла ogg
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Ogg
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Поток данных Speex может храниться в файлах Ogg.
 В данном случае, первый пакет Ogg файла содержит заголовок Speex, описанный
 в таблице 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:ogg_speex_header"

\end_inset

.
 Все целочисленные поля в заголовках хранятся с прямым порядком битов.
 Поле 
\family typewriter
speex_string
\family default
 должно содержать 
\begin_inset Quotes eld
\end_inset


\family typewriter
Speex
\family default

\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Quotes erd
\end_inset

 (с тремя пробелами), которые определяют битовый поток.
 Следующее поле, 
\family typewriter
speex_version
\family default
 содержит версию Speex которая кодировала файл.
 На данный момент, обратитесь к speex_header.[ch] для дополнительной информации.
 Флаг начала потока (
\family typewriter
b_o_s
\family default
) выставляется в 1 для заголовка.
 Заголовок пакета имеет 
\family typewriter
packetno=0
\family default
 и 
\family typewriter
granulepos=0
\family default
.
\end_layout

\begin_layout Standard
Второй пакет содержит заголовок комментария Speex.
 Используемый формат, это формат комментария Vorbis, описанный здесь: http://www.
xiph.org/ogg/vorbis/doc/v-comment.html .
 Данный пакет имеет 
\family typewriter
packetno=1
\family default
 и 
\family typewriter
granulepos=0
\family default
.
\end_layout

\begin_layout Standard
Третий и последующие пакеты каждый содержат один или более (количество указанное
 в заголовке) кадров Speex.
 Они идентифицируются при помощи 
\family typewriter
packetno
\family default
 начинающегося с 2 и 
\family typewriter
granulepos
\family default
 - количеством последних выборок, закодированных в пакете.
 У последнего из этих пакетов флаг 
\emph on
end of stream
\emph default
 (
\family typewriter
e_o_s
\family default
) установлен в единицу.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement htbp
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="16" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Поле
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Тип данных
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Размер
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
speex_string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
char[]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
speex_version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
char[]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
speex_version_id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
header_size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mode_bitstream_version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nb_channels
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bitrate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frame_size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vbr
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frames_per_packet
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
extra_headers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reserved2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Заголовок пакета Ogg/Speex
\begin_inset CommandInset label
LatexCommand label
name "cap:ogg_speex_header"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Введение в CELP 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CELP
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Introduction-to-CELP"

\end_inset


\end_layout

\begin_layout Quote
\align center

\emph on
Не вмешивайтесь в дела полюсов, ибо непостижимы они и стремятся покинуть
 единичную окружность.
\end_layout

\begin_layout Standard
Speex основан на CELP, что означает линейное предсказание с мультикодовым
 управлением.
 В этом разделе предполагается введение в основные принципы CELP, так что,
 если вы знакомы с CELP, вы можете совершенно спокойно пропустить этот раздел
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Speex-narrowband-mode"

\end_inset

.
 Алгоритм CELP базируется на трех основных идеях:
\end_layout

\begin_layout Enumerate
Использование модели линейного предсказания в качестве модели голосового
 тракта
\end_layout

\begin_layout Enumerate
Использование (адаптивной или фиксированной) кодовой таблицы выступающей
 в качестве источника модели линейного предсказания (ЛП)
\end_layout

\begin_layout Enumerate
Поиск осуществляется в замкнутом цикле в 
\begin_inset Quotes eld
\end_inset

перцепционно взвешенном домене
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Данный раздел описывает основные идеи, используемые в CELP.
 Раздел по прежнему в стадии разработки.
\end_layout

\begin_layout Section
Модель предсказания речи "источник-фильтр"
\end_layout

\begin_layout Standard
Данная модель подразумевает, что голосовые связки являются источниками спектраль
но плоского звука, и что голосовой тракт играет роль фильтра по отношению
 к спектральной форме различных звуков речи.
 Пока еще аппроксимация является широко используемой моделью в кодировании
 речи по причине ее простоты.
 Ее использование является также причиной, по которой большинство речевых
 кодеков (в том числе и Speex) плохо работают при кодировании музыки.
 Различные фонемы могут быть выделены по их возбудителю (источнику) и спектральн
ой форме (фильтру).
 У гласных звуков источник сигнала является периодическим и может быть аппроксим
ирован  импульсной последовательностью во временной плоскости или гармониками,
 расположенными через определенные промежутки, в частотной области.
 С другой стороны, глухие согласные (такие как "с", "ш", "ф") имеют источник
 сигнала, который похож на белый гауссовский шум.
 Также звонкие согласные (такие как "з", "в") имеют сигнал возбуждения,
 состоящий из  гармонической и шумовой части.
\end_layout

\begin_layout Standard
Модель источник-фильтр обычно связана с использованием линейного предсказания.
 Модель CELP основана на модели источник-фильтр, как это можно увидеть на
 CELP декодировщике, показанном на диаграмме ниже 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-CELP-model"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename celp_decoder.eps
	width 45page%
	keepAspectRatio

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Модель синтеза речи CELP (декодер)
\begin_inset CommandInset label
LatexCommand label
name "fig:The-CELP-model"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Коэффициенты линейного предсказания (LPC)
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
linear prediction
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Линейное предсказание лежит в основе множества техник кодирования речи,
 включая CELP.
 Идея заключается в том, что сигнал 
\begin_inset Formula $x[n]$
\end_inset

 предсказывается с использованием линейной комбинации его выборок: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y[n]=\sum_{i=1}^{N}a_{i}x[n-i]
\]

\end_inset

 где 
\begin_inset Formula $y[n]$
\end_inset

 линейное предсказание
\begin_inset Formula $x[n]$
\end_inset

.
 Таким образом, ошибка предсказания представлена как:
\begin_inset Formula 
\[
e[n]=x[n]-y[n]=x[n]-\sum_{i=1}^{N}a_{i}x[n-i]
\]

\end_inset

Цель линейного предсказания в том, чтобы найти наилучшие коэффициенты предсказан
ия 
\begin_inset Formula $a_{i}$
\end_inset

, при которых значение функции среднеквадратичной ошибки является наименьшей:
\begin_inset Formula 
\[
E=\sum_{n=0}^{L-1}\left[e[n]\right]^{2}=\sum_{n=0}^{L-1}\left[x[n]-\sum_{i=1}^{N}a_{i}x[n-i]\right]^{2}
\]

\end_inset

Это может быть осуществлено путем зануления производных 
\begin_inset Formula $\frac{\partial E}{\partial a_{i}}$
\end_inset

 :
\begin_inset Formula 
\[
\frac{\partial E}{\partial a_{i}}=\frac{\partial}{\partial a_{i}}\sum_{n=0}^{L-1}\left[x[n]-\sum_{i=1}^{N}a_{i}x[n-i]\right]^{2}=0
\]

\end_inset


\end_layout

\begin_layout Standard
Для фильтра порядка 
\begin_inset Formula $N$
\end_inset

 коэффициенты 
\begin_inset Formula $a_{i}$
\end_inset

 могут быть найдены с помощью решения системы линейных уравнений 
\begin_inset Formula $\mathbf{Ra}=\mathbf{r}$
\end_inset

 размерностью 
\begin_inset Formula $N\times N$
\end_inset

 , где
\begin_inset Formula 
\[
\mathbf{R}=\left[\begin{array}{cccc}
R(0) & R(1) & \cdots & R(N-1)\\
R(1) & R(0) & \cdots & R(N-2)\\
\vdots & \vdots & \ddots & \vdots\\
R(N-1) & R(N-2) & \cdots & R(0)
\end{array}\right]
\]

\end_inset


\begin_inset Formula 
\[
\mathbf{r}=\left[\begin{array}{c}
R(1)\\
R(2)\\
\vdots\\
R(N)
\end{array}\right]
\]

\end_inset

с 
\begin_inset Formula $R(m)$
\end_inset

, автокорреляцией
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
auto-correlation
\end_layout

\end_inset

 сигнала 
\begin_inset Formula $x[n]$
\end_inset

, вычисляемой по следующей формуле:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R(m)=\sum_{i=0}^{N-1}x[i]x[i-m]
\]

\end_inset


\end_layout

\begin_layout Standard
Так как 
\begin_inset Formula $\mathbf{R}$
\end_inset

 самосопряженная матрица Тёплица, для решения данной системы уравнений может
 быть использован алгоритм Левинсона-Дарбина 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Levinson-Durbin
\end_layout

\end_inset

, решающий эту задачу за 
\begin_inset Formula $\mathcal{O}\left(N^{2}\right)$
\end_inset

 итераций вместо 
\begin_inset Formula $\mathcal{O}\left(N^{3}\right)$
\end_inset

.
 Также может быть доказано что все корни 
\begin_inset Formula $A(z)$
\end_inset

 находятся в пределах единичного круга, это означает, что 
\begin_inset Formula $1/A(z)$
\end_inset

 всегда стабилен.
 Но это в теории, на практике это не всегда является справедливым по причине
 конечной точности, существуют две часто используемых техники, подтверждающие
 стабильность фильтра.
 Во первых, можно умножить 
\begin_inset Formula $R(0)$
\end_inset

 на число немного большее единицы (такое как 1.0001), что, в свою очередь,
 эквивалентно добавлению шума к сигналу.
 Также мы можем применить оконную фильтрацию к автокорреляции, что эквивалентно
 фильтрации в частотной области, уменьшающей острые резонансы.
\end_layout

\begin_layout Section
Предсказание тембра
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
pitch
\end_layout

\end_inset


\end_layout

\begin_layout Standard
В течении звонких сегментов голосовой сигнал периодический, таким образом,
 можно использовать это свойство путем аппроксимации сигнала возбуждения
 
\begin_inset Formula $e[n]$
\end_inset

, представляя его как усиленный в 
\begin_inset Formula $\beta$
\end_inset

 раз предыдущий сигнал:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
e[n]\simeq p[n]=\beta e[n-T]\ ,
\]

\end_inset

где 
\begin_inset Formula $T$
\end_inset

 период основного тона, 
\begin_inset Formula $\beta$
\end_inset

 усиление основного тона.
 Мы называем это долгосрочным предсказанием если источник предсказывается
 как 
\begin_inset Formula $e[n-T]$
\end_inset

 с 
\begin_inset Formula $T\gg N$
\end_inset

.
\end_layout

\begin_layout Section
Инновационная кодовая таблица
\end_layout

\begin_layout Standard
Последний сигнал возбуждения 
\begin_inset Formula $e[n]$
\end_inset

 будет являться суммой предсказанного тона и инновационного сигнала 
\begin_inset Formula $c[n]$
\end_inset

, взятого из фиксированной кодовой таблицы, отсюда и название линейное предсказа
ние с 
\shape italic
мультикодовым
\shape default
 управлением.
 Последнее выражение имеет вид:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
e[n]=p[n]+c[n]=\beta e[n-T]+c[n]\ .
\]

\end_inset

Квантование 
\begin_inset Formula $c[n]$
\end_inset

, где расположено большинство бит в CELP.
 Представляет информацию, которая не может быть получена ни через линейное
 предсказание ни через предсказание тона.
 В Z плоскости мы можем представить итоговый сигнал 
\begin_inset Formula $X(z)$
\end_inset

 как 
\begin_inset Formula 
\[
X(z)=\frac{C(z)}{A(z)\left(1-\beta z^{-T}\right)}
\]

\end_inset


\end_layout

\begin_layout Section
Взвешивание шума
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
error weighting
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
analysis-by-synthesis
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Большинство современных звуковых кодеков пытается сформировать шум так,
 чтобы он отображался, в основном, в тех частотных областях, в которых его
 не сможет распознать человеческое ухо.
 Для того, чтобы максимизировать качество речи, CELP кодеки минимизируют
 среднеквадратичную ошибку в перцепционно взвешенном домене.
 Это означает, что перцепционно взвешенный шумовой фильтр 
\begin_inset Formula $W(z)$
\end_inset

 применяется к сигналу ошибки в кодировщике.
 В большинстве CELP кодеков 
\begin_inset Formula $W(z)$
\end_inset

 это взвешивающий фильтр, полученный из коэффициентов линейного предсказания,
 как правило с помощью расширения полосы частот.
 Предположим, что огибающая спектра представлена синтезирующим фильтром
 
\begin_inset Formula $1/A(z)$
\end_inset

, тогда в CELP кодеках полученный взвешивающий фильтр шумов обычно представлен
 как: 
\begin_inset Formula 
\begin{equation}
W(z)=\frac{A(z/\gamma_{1})}{A(z/\gamma_{2})}\ ,\label{eq:gamma-weighting}
\end{equation}

\end_inset

где 
\begin_inset Formula $\gamma_{1}=0.9$
\end_inset

 и 
\begin_inset Formula $\gamma_{2}=0.6$
\end_inset

 в базовой реализации Speex.
 Если фильтр 
\begin_inset Formula $A(z)$
\end_inset

 имеет комплексные полюса 
\begin_inset Formula $p_{i}$
\end_inset

 на 
\begin_inset Formula $z$
\end_inset

-плоскости, фильтр 
\begin_inset Formula $A(z/\gamma)$
\end_inset

 будет иметь полюса 
\begin_inset Formula $p'_{i}=\gamma p_{i}$
\end_inset

, таким образом добиваясь более плоского варианта 
\begin_inset Formula $A(z)$
\end_inset

.
\end_layout

\begin_layout Standard
Взвешивающий фильтр применяется к сигналу ошибок для оптимизации поиска
 по кодовой таблице при анализе через синтез (Analysis-by-Synthesis или
 AbS).
 Это приводит к определенному результату в спектре шума, который стремится
 к 
\begin_inset Formula $1/W(z)$
\end_inset

.
 Пока простота модели является важной причиной успеха CELP, остается, что
 
\begin_inset Formula $W(z)$
\end_inset

 это очень грубая аппроксимация для функции перцепционно оптимального взвешивани
я шума.
 Рисунок 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Standard-noise-shaping"

\end_inset

 показывает сглаживание шума, полученное с помощью выражения 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:gamma-weighting"

\end_inset

.
 Во всем данном руководстве под 
\begin_inset Formula $W(z)$
\end_inset

 мы подразумеваем взвешивающий фильтр шума и под 
\begin_inset Formula $1/W(z)$
\end_inset

 мы подразумеваем формирующий шумовой фильтр (или кривая).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename ref_shaping.eps
	width 45page%
	keepAspectRatio

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Стандартное подавление шума в CELP.
 Произвольное смещение оси y.
\begin_inset CommandInset label
LatexCommand label
name "cap:Standard-noise-shaping"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Анализ через синтез
\end_layout

\begin_layout Standard
Один из основных принципов CELP назван анализом через синтез (AbS), это
 означает, что кодирование (анализ) осуществляется с помощью перцепционной
 оптимизации декодированного (синтез) сигнала в замкнутом цикле.
 В теории лучший CELP поток должен быть произведен путем проверки всех возможных
 комбинаций битов и выбора одной, которая воспроизведет декодированный сигнал,
 звучащий наилучшим образом.
 Очевидно, что это не реализуемо на практике по двум причинам: требуемая
 сложность намного выше возможностей доступного на данный момент аппаратного
 обеспечения и критерий выбора наилучшего звучания определяется слушателем.
 
\end_layout

\begin_layout Standard
С целью достижения кодирования в реальном времени с использованием ограниченных
 вычислительных ресурсов, оптимизация разбивается на меньшие, более управляемые,
 последовательные поиски с использованием взвешивающей функции, описанной
 ранее.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Узкополосный режим Speex
\begin_inset CommandInset label
LatexCommand label
name "sec:Speex-narrowband-mode"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
narrowband
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Данный раздел рассматривает то, как работает Speex в узкополосном (частота
 дискретизации 
\begin_inset Formula $8\:\mathrm{\text{кГц}}$
\end_inset

) режиме.
 Размер кадра для данного режима равен 
\begin_inset Formula $20\:\mathrm{\text{мс}}$
\end_inset

, что соответствует 160 выборкам.
 Каждый кадр разделяется на 4 подкадра по 40 выборок каждый.
\end_layout

\begin_layout Standard
Также большинство решений проектирования было основано на первоначальных
 целях и предположениях:
\end_layout

\begin_layout Itemize
Минимизация количества информации, извлекаемой из предыдущих кадров (для
 стойкости к потере пакетов)
\end_layout

\begin_layout Itemize
Динамически выбираемые кодовые таблицы (LSP, шаговые и инновационные)
\end_layout

\begin_layout Itemize
Кодовые таблицы с фиксированным субвектором (инновационные)
\end_layout

\begin_layout Section
Анализ кадра целиком
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
linear prediction
\end_layout

\end_inset


\end_layout

\begin_layout Standard
В узкополосном режиме, кадры Speex длиной в 20 мс (160 выборок) и разделены
 на 4 субкадра по 5 мс каждый (40 выборок).
 Для большинства узкополосных битрейтов (8 кбит/с и выше) параметры, кодируемые
 только на уровне кадра, это линейные спектральные пары (LSP) и глобальное
 усиление сигнала возбуждения 
\begin_inset Formula $g_{frame}$
\end_inset

, как показано на рисунке 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Frame-open-loop-analysis"

\end_inset

.
 Все остальные параметры кодируются на уровне субкадров.
\end_layout

\begin_layout Standard
Анализ линейного предсказания осуществляется один раз за кадр с использованием
 асимметричного окна Хемминга, центрированного по четверти субкадра.
 Потому что коэффициенты линейного предсказания (LPC) квантуются не сразу,
 сначала они конвертируются в линейные спектральные пары (LSP)
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
line spectral pair
\end_layout

\end_inset

.
 Считается что коэффициенты LSP связаны с четвертью субкадров, и коэффициенты,
 связанные с первыми тремя субкадрами, линейно интерполируются с использованием
 текущего и предыдущего коэффициента LSP.
 Полученные коэффициенты конвертируются обратно в коэффициенты LPC фильтра
 
\begin_inset Formula $\hat{A}(z)$
\end_inset

.
 Не квантованный интерполированный фильтр представлен как 
\begin_inset Formula $A(z)$
\end_inset

 и может быть использован для взвешивающего фильтра 
\begin_inset Formula $W(z)$
\end_inset

, потому как нет необходимости в доступности данного фильтра для декодировщика.
\end_layout

\begin_layout Standard
Для того, чтобы сделать Speex более стойким к потере пакетов, к коэффициентам
 LSP не применяется предсказание до квантования.
 Коэффициенты LSP кодируются с помощью векторного квантования (VQ) с 30
 битами для более высокого качества и 18 битами для более низкого качества.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename speex_analysis.eps
	width 35page%

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Анализ кадра в разомкнутом контуре
\begin_inset CommandInset label
LatexCommand label
name "cap:Frame-open-loop-analysis"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Анализ через синтез субкадров
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename speex_abs.eps
	lyxscale 75
	width 40page%

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Оптимизация субкадра анализом через синтез в замкнутом цикле.
\begin_inset CommandInset label
LatexCommand label
name "cap:Sub-frame-AbS"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Цикл кодировщика анализа через синтез показан на рисунке 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Sub-frame-AbS"

\end_inset

.
 Существуют три основных аспекта по которым Speex значительно отличается
 большинства остальных CELP кодировщиков.
 Во-первых, пока большинство новых CELP кодировщиков используют дробную
 оценку тембра с одним коэффициентом усиления , Speex использует целое число
 для кодирования периода тембра, но использует предсказание с тремя коэффициента
ми усиления.
 Роль адаптивной кодовой таблицы 
\begin_inset Formula $e_{a}[n]$
\end_inset

 может быть представлено как:
\begin_inset Formula 
\begin{equation}
e_{a}[n]=g_{0}e[n-T-1]+g_{1}e[n-T]+g_{2}e[n-T+1]\label{eq:adaptive-3tap}
\end{equation}

\end_inset

где 
\begin_inset Formula $g_{0}$
\end_inset

, 
\begin_inset Formula $g_{1}$
\end_inset

 и 
\begin_inset Formula $g_{2}$
\end_inset

 это совместно квантованные коэффициенты усиления тембра и 
\begin_inset Formula $e[n]$
\end_inset

 это сигнал возбуждения в памяти кодека.
 Стоит заметить, что когда длина участка с одинаковым тембром меньше длины
 субкадра, мы повторяем сигнал возбуждения на период 
\begin_inset Formula $T$
\end_inset

.
 Например, когда 
\begin_inset Formula $n-T+1\geq0$
\end_inset

, мы используем 
\begin_inset Formula $n-2T+1$
\end_inset

 вместо этого.
 В большинстве режимов период тембра кодируется семью битами в диапазоне
 
\begin_inset Formula $\left[17,144\right]$
\end_inset

 и коэффициенты 
\begin_inset Formula $\beta_{i}$
\end_inset

 квантованы векторно с 7 битами на более высоких битрейтах (15 кбит/с в
 узкополосном режиме и более) и пятью на более низких (11 кбит/с в узкополосном
 режиме и менее).
\end_layout

\begin_layout Standard
Большинство существующих на данный момент CELP кодеков используют предсказание
 со скользящим средним (MA) для кодирования коэффициента усиления из фиксированн
ой кодовой таблицы.
 Это предоставляет немного лучшее кодирование ценой введения зависимости
 от ранее закодированных кадров.
 Второе отличие состоит в том, что Speex кодирует коэффициент усиления как
 продукт глобального усиления сигнала возбуждения 
\begin_inset Formula $g_{frame}$
\end_inset

 с поправками усиления субкадра 
\begin_inset Formula $g_{subf}$
\end_inset

.
 Это увеличивает стойкость к потере пакетов путем уничтожения межкадровой
 зависимости.
 Коэффициент усиления субкадра кодируется до поиска в фиксированной таблице
 (оптимизация без обратной связи) и использует между 0 и 3 битами на субкадр,
 в зависимости от битрейта.
\end_layout

\begin_layout Standard
Третье различие состоит в том, что Speex использует субвекторное квантование
 для инновационного (с фиксированной таблицей) сигнала вместо алгебраической
 кодовой таблицы.
 Каждый субкадр разделен на субвекторы длины, варьирующейся между 5 и 20
 выборками.
 Каждый субвектор выбирается из кодовой таблицы, зависимой от битрейта,
 и все субвекторы склеиваются для того, чтобы сформировать субкадр.
 В качестве примера, режим с 3.95 кбит/с использует размер субвектора в 20
 выборок с 32 записями в кодовой таблице (5 бит).
 Это означает, что инновационный сигнал кодируется с 10 битами на субкадр,
 или 2000 бит/с.
 С другой стороны, в режиме 18.2 кбит/с используется размер субвектора из
 5 выборок с 256 записями в кодовой таблице (8 bits), то есть инновационный
 сигнал использует 64 бита на субкадр, или 12800 бит/с.
 
\end_layout

\begin_layout Section
Битрейты
\end_layout

\begin_layout Standard
До сих пор нет MOS (абсолютно субъективного понятия
\begin_inset Index idx
status open

\begin_layout Plain Layout
mean opinion score
\end_layout

\end_inset

), но субъективная оценка была проведена для Speex.
 Для того, чтобы дать общее представление о качестве, достижимом с помощью
 данного кодека, таблица 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:quality_vs_bps"

\end_inset

 представляет мое субъективное мнение об этом.
 Следует заметить, что разные люди воспринимают качество по разному и человек,
 создавший этот кодек, имел некоторую предвзятость при субъективной оценке.
 Последнее, что следует упомянуть, это то, что качество большинства кодеков
 (включая Speex) варьируется в зависимости от входного сигнала.
 Обратите внимание, что сложность только приблизительная (с 0.5 мфлопс и
 использованием наименьшей установки сложности).
 Для декодирования требуется приблизительно 0.5 мфлопс 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
complexity
\end_layout

\end_inset

 в большинстве режимов (1 мфлопс с перцепционным усилением).
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="17" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Режим
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Качество
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Битрейт
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
bit-rate
\end_layout

\end_inset

 (бит/с)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
мфлоп
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
complexity
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Качество/описание
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
250
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Нет передачи (DTX)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2,150
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Вокодер (в основном для комфортного шума)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5,950
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Очень заметные артефакты/шум, хорошая разборчивость
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3-4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8,000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Артефакты/шум иногда заметны
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5-6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11,000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Артефакты иногда заметны только в наушниках
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7-8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15,000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Нужны хорошие наушники для того, чтобы заметить разницу
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18,200
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Трудно заметить разницу даже в хороших наушниках
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24,600
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Полностью прозрачен для голоса, хорошее качество музыки
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3,950
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Очень заметные артефакты/шум, хорошая разборчивость
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
зарезервировано
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Определяется реализацией, интерпретируется вызовом функции или пропускается
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Внутриполосная связь Speex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Код разделителя
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Качество в сравнении с битрейтом
\begin_inset CommandInset label
LatexCommand label
name "cap:quality_vs_bps"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Перцепционное усиление
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
perceptual enhancement
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Данный раздел действителен только для версии 1.1.12 и более ранних.
 Он не применим к версии 1.2-beta1 (и поздних), для которых новое перцепционное
 усиление до сих пор не задокументировано.
\end_layout

\begin_layout Standard
Данная часть кодека применяется только к декодировщику и даже может быть
 изменена без нарушения функциональной совместимости.
 По этой причине, реализация предоставленная и описанная здесь должна рассматрив
аться только как пример реализации.
 Усиление разделено на две части.
 Первая, это синтезирующий фильтр
\begin_inset Formula $S(z)=1/A(z)$
\end_inset

 заменен улучшенным фильтром:
\begin_inset Formula 
\[
S'(z)=\frac{A\left(z/a_{2}\right)A\left(z/a_{3}\right)}{A\left(z\right)A\left(z/a_{1}\right)}
\]

\end_inset

где 
\begin_inset Formula $a_{1}$
\end_inset

 и 
\begin_inset Formula $a_{2}$
\end_inset

 зависят от используемого режима и 
\begin_inset Formula $a_{3}=\frac{1}{r}\left(1-\frac{1-ra_{1}}{1-ra_{2}}\right)$
\end_inset

 с 
\begin_inset Formula $r=.9$
\end_inset

.
 Вторая часть усиления состоит из использования гребенчатого фильтра для
 того, чтобы улучшить шаг в области сигнала возбуждения.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Широкополосный режим Speex (поддиапазон CELP)
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
wideband
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Speex-wideband-mode"

\end_inset


\end_layout

\begin_layout Standard
Для широкополосного режима, Speex использует квадратурный зеркальный фильтр
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
quadrature mirror filter
\end_layout

\end_inset

 (QMF) для того чтобы расколоть диапазон на два.
 Таким образом сигнал частотой 16 кГц разделяется на два сигнала частотой
 8 кГц, один представляет нижний диапазон (0-4 кГц), другой верхний диапазон
 (4-8 кГц).
 Нижний диапазон кодируется в узкополосном режиме, описанном в разделе 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Speex-narrowband-mode"

\end_inset

, таким образом, полученный 
\begin_inset Quotes eld
\end_inset

встроенный узкополосный поток
\begin_inset Quotes erd
\end_inset

 также может быть декодирован узкополосным декодировщиком.
 Т.
 к.
 кодирование нижнего диапазона уже описано, в данном разделе будет рассматривать
ся только кодирование верхнего диапазона.
\end_layout

\begin_layout Section
Линейное предсказание
\end_layout

\begin_layout Standard
Линейное предсказание для верхнего диапазона очень похоже на то, что использовал
ось для узкополосного режима.
 Единственная разница в, том что мы используем только 12 бит для кодирования
 LPS верхнего поддиапазона, используя многоступенчатый векторный квантователь
 (MSVQ).
 Первый уровень квантуется 10 коэффициентами с 6 битами и ошибкой, которая
 после квантуется с использованием так же 6 бит.
\end_layout

\begin_layout Section
Предсказание тембра
\end_layout

\begin_layout Standard
Эта часть описания простая: нет никакого предсказания тембра для верхнего
 поддиапазона.
 На то существуют две причины.
 Во-первых, гармоническая структура обычно слабо выражена в этом диапазоне
 (выше 4 кГц).
 Во-вторых, это было бы очень трудно реализовать так как QMF загибает диапазон
 4-8 кГц в 4-0 кГц (переворачивая частотную ось), это означает, что гармоники
 больше не расположены на частотах кратных фундаментальным (тембру).
 
\end_layout

\begin_layout Section
Квантование сигнала возбуждения
\end_layout

\begin_layout Standard
Сигнал возбуждения верхнего диапазона кодируется так же, как и сигнал в
 узкополосном режиме.
 
\end_layout

\begin_layout Section
Расположение битов
\end_layout

\begin_layout Standard
Для широкополосного режима внутренний узкополосный кадр пакуется до того,
 как кодируется верхний поддиапазон.
 Верхний поддиапазон расположен, как показано в таблице 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:bits-wideband"

\end_inset

.
 Для широкополосного режима, ID режима такой же как и установка качества
 Speex, определенная в таблице 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:wideband-quality"

\end_inset

.
 Это также означает, что широкополосный кадр может быть декодирован узкополосным
 декодировщиком только с одним предостережением, состоящем в том, что в
 одном пакете может быть более одного кадра, декодировщику будет необходимо
 пропускать широкополосные части для синхронизации битового потока.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Параметр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Частота обновления
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Широкополосный бит
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
кадр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ID режима
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
кадр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LSP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
кадр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Усиление сигнала возбуждения
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
субкадр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Excitation VQ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
субкадр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
80
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Итог
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
кадр
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
36
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
112
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
192
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
352
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Расположение бит для верхнего диапазона в широкополосном режиме
\begin_inset CommandInset label
LatexCommand label
name "cap:bits-wideband"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Режим/качество
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Битрейт
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
bit-rate
\end_layout

\end_inset

 (кбит/с)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Качество/описание
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3,950
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Едва понятный (главным образом для комфортного шума)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5,750
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Очень заметные артефакты/шум, плохая различимость
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7,750
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Очень заметные артефакты/шум, хорошая различимость
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9,800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Артефакты/шум иногда надоедливы
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12,800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Артефакты/шум обычно заметны
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16,800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Артефакты/шум иногда заметны
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20,600
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Нужны хорошие наушники для того, чтобы заметить разницу
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23,800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Нужны хорошие наушники для того, чтобы заметить разницу
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27,800
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Трудно заметить разницу даже в хороших наушниках
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
34,200
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Трудно заметить разницу даже в хороших наушниках
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42,200
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Полностью прозрачен для голоса, хорошее качество музыки
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Соотношение качества и битрейта для широкополосного кодировщика
\begin_inset CommandInset label
LatexCommand label
name "tab:wideband-quality"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Примеры кода
\begin_inset CommandInset label
LatexCommand label
name "sec:Sample-code"

\end_inset


\end_layout

\begin_layout Standard
Данный раздел показывает пример кода для кодирования и декодирования речи
 с использованием Speex API.
 Команды, используемые для кодирование и декодирования файла могут быть
 следующими:
\family typewriter

\begin_inset Newline newline
\end_inset

% sampleenc in_file.sw | sampledec out_file.sw
\family default

\begin_inset Newline newline
\end_inset

где оба файла сырые (без заголовка) закодированные при 16 битах на выборку
 (с естественным машинным порядком байт).
\end_layout

\begin_layout Section
sampleenc.c
\end_layout

\begin_layout Standard
sampleenc принимает сырой файл с 16 битами на выборку, кодирует его и выдает
 поток Speex в stdout.
 Заметьте что используемый здесь формат файла несовместим с speexenc/speexdec.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "sampleenc.c"
lstparams "caption={Source code for sampleenc},label={sampleenc-source-code},numbers=left,numberstyle={\\footnotesize}"

\end_inset


\end_layout

\begin_layout Section
sampledec.c
\end_layout

\begin_layout Standard
sampledec считывает Speex поток из stdin, декодирует его, и выдает в файл
 с 16 битами на семпл.
 Заметьте что используемый здесь формат файла несовместим с speexenc/speexdec.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "sampledec.c"
lstparams "caption={Source code for sampledec},label={sampledec-source-code},numbers=left,numberstyle={\\footnotesize}"

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
IETF RTP профиль
\begin_inset CommandInset label
LatexCommand label
name "sec:IETF-draft"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "draft-ietf-avt-rtp-speex-05-tmp.txt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Лицензия Speex
\begin_inset CommandInset label
LatexCommand label
name "sec:Speex-License"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand verbatiminput
filename "../COPYING"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
GNU Free Documentation License
\end_layout

\begin_layout Standard
Version 1.1, March 2000
\end_layout

\begin_layout Standard
Copyright (C) 2000 Free Software Foundation, Inc.
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA Everyone is permitted
 to copy and distribute verbatim copies of this license document, but changing
 it is not allowed.
 
\end_layout

\begin_layout Section*
0.
 PREAMBLE
\end_layout

\begin_layout Standard
The purpose of this License is to make a manual, textbook, or other written
 document "free" in the sense of freedom: to assure everyone the effective
 freedom to copy and redistribute it, with or without modifying it, either
 commercially or noncommercially.
 Secondarily, this License preserves for the author and publisher a way
 to get credit for their work, while not being considered responsible for
 modifications made by others.
\end_layout

\begin_layout Standard
This License is a kind of "copyleft", which means that derivative works
 of the document must themselves be free in the same sense.
 It complements the GNU General Public License, which is a copyleft license
 designed for free software.
\end_layout

\begin_layout Standard
We have designed this License in order to use it for manuals for free software,
 because free software needs free documentation: a free program should come
 with manuals providing the same freedoms that the software does.
 But this License is not limited to software manuals; it can be used for
 any textual work, regardless of subject matter or whether it is published
 as a printed book.
 We recommend this License principally for works whose purpose is instruction
 or reference.
 
\end_layout

\begin_layout Section*
1.
 APPLICABILITY AND DEFINITIONS
\end_layout

\begin_layout Standard
This License applies to any manual or other work that contains a notice
 placed by the copyright holder saying it can be distributed under the terms
 of this License.
 The "Document", below, refers to any such manual or work.
 Any member of the public is a licensee, and is addressed as "you".
\end_layout

\begin_layout Standard
A "Modified Version" of the Document means any work containing the Document
 or a portion of it, either copied verbatim, or with modifications and/or
 translated into another language.
\end_layout

\begin_layout Standard
A "Secondary Section" is a named appendix or a front-matter section of the
 Document that deals exclusively with the relationship of the publishers
 or authors of the Document to the Document's overall subject (or to related
 matters) and contains nothing that could fall directly within that overall
 subject.
 (For example, if the Document is in part a textbook of mathematics, a Secondary
 Section may not explain any mathematics.) The relationship could be a matter
 of historical connection with the subject or with related matters, or of
 legal, commercial, philosophical, ethical or political position regarding
 them.
\end_layout

\begin_layout Standard
The "Invariant Sections" are certain Secondary Sections whose titles are
 designated, as being those of Invariant Sections, in the notice that says
 that the Document is released under this License.
\end_layout

\begin_layout Standard
The "Cover Texts" are certain short passages of text that are listed, as
 Front-Cover Texts or Back-Cover Texts, in the notice that says that the
 Document is released under this License.
\end_layout

\begin_layout Standard
A "Transparent" copy of the Document means a machine-readable copy, represented
 in a format whose specification is available to the general public, whose
 contents can be viewed and edited directly and straightforwardly with generic
 text editors or (for images composed of pixels) generic paint programs
 or (for drawings) some widely available drawing editor, and that is suitable
 for input to text formatters or for automatic translation to a variety
 of formats suitable for input to text formatters.
 A copy made in an otherwise Transparent file format whose markup has been
 designed to thwart or discourage subsequent modification by readers is
 not Transparent.
 A copy that is not "Transparent" is called "Opaque".
\end_layout

\begin_layout Standard
Examples of suitable formats for Transparent copies include plain ASCII
 without markup, Texinfo input format, LaTeX input format, SGML or XML using
 a publicly available DTD, and standard-conforming simple HTML designed
 for human modification.
 Opaque formats include PostScript, PDF, proprietary formats that can be
 read and edited only by proprietary word processors, SGML or XML for which
 the DTD and/or processing tools are not generally available, and the machine-ge
nerated HTML produced by some word processors for output purposes only.
\end_layout

\begin_layout Standard
The "Title Page" means, for a printed book, the title page itself, plus
 such following pages as are needed to hold, legibly, the material this
 License requires to appear in the title page.
 For works in formats which do not have any title page as such, "Title Page"
 means the text near the most prominent appearance of the work's title,
 preceding the beginning of the body of the text.
\end_layout

\begin_layout Section*
2.
 VERBATIM COPYING
\end_layout

\begin_layout Standard
You may copy and distribute the Document in any medium, either commercially
 or noncommercially, provided that this License, the copyright notices,
 and the license notice saying this License applies to the Document are
 reproduced in all copies, and that you add no other conditions whatsoever
 to those of this License.
 You may not use technical measures to obstruct or control the reading or
 further copying of the copies you make or distribute.
 However, you may accept compensation in exchange for copies.
 If you distribute a large enough number of copies you must also follow
 the conditions in section 3.
\end_layout

\begin_layout Standard
You may also lend copies, under the same conditions stated above, and you
 may publicly display copies.
\end_layout

\begin_layout Section*
3.
 COPYING IN QUANTITY
\end_layout

\begin_layout Standard
If you publish printed copies of the Document numbering more than 100, and
 the Document's license notice requires Cover Texts, you must enclose the
 copies in covers that carry, clearly and legibly, all these Cover Texts:
 Front-Cover Texts on the front cover, and Back-Cover Texts on the back
 cover.
 Both covers must also clearly and legibly identify you as the publisher
 of these copies.
 The front cover must present the full title with all words of the title
 equally prominent and visible.
 You may add other material on the covers in addition.
 Copying with changes limited to the covers, as long as they preserve the
 title of the Document and satisfy these conditions, can be treated as verbatim
 copying in other respects.
\end_layout

\begin_layout Standard
If the required texts for either cover are too voluminous to fit legibly,
 you should put the first ones listed (as many as fit reasonably) on the
 actual cover, and continue the rest onto adjacent pages.
\end_layout

\begin_layout Standard
If you publish or distribute Opaque copies of the Document numbering more
 than 100, you must either include a machine-readable Transparent copy along
 with each Opaque copy, or state in or with each Opaque copy a publicly-accessib
le computer-network location containing a complete Transparent copy of the
 Document, free of added material, which the general network-using public
 has access to download anonymously at no charge using public-standard network
 protocols.
 If you use the latter option, you must take reasonably prudent steps, when
 you begin distribution of Opaque copies in quantity, to ensure that this
 Transparent copy will remain thus accessible at the stated location until
 at least one year after the last time you distribute an Opaque copy (directly
 or through your agents or retailers) of that edition to the public.
\end_layout

\begin_layout Standard
It is requested, but not required, that you contact the authors of the Document
 well before redistributing any large number of copies, to give them a chance
 to provide you with an updated version of the Document.
 
\end_layout

\begin_layout Section*
4.
 MODIFICATIONS
\end_layout

\begin_layout Standard
You may copy and distribute a Modified Version of the Document under the
 conditions of sections 2 and 3 above, provided that you release the Modified
 Version under precisely this License, with the Modified Version filling
 the role of the Document, thus licensing distribution and modification
 of the Modified Version to whoever possesses a copy of it.
 In addition, you must do these things in the Modified Version: 
\end_layout

\begin_layout Itemize
A.
 Use in the Title Page (and on the covers, if any) a title distinct from
 that of the Document, and from those of previous versions (which should,
 if there were any, be listed in the History section of the Document).
 You may use the same title as a previous version if the original publisher
 of that version gives permission.
\end_layout

\begin_layout Itemize
B.
 List on the Title Page, as authors, one or more persons or entities responsible
 for authorship of the modifications in the Modified Version, together with
 at least five of the principal authors of the Document (all of its principal
 authors, if it has less than five).
\end_layout

\begin_layout Itemize
C.
 State on the Title page the name of the publisher of the Modified Version,
 as the publisher.
\end_layout

\begin_layout Itemize
D.
 Preserve all the copyright notices of the Document.
\end_layout

\begin_layout Itemize
E.
 Add an appropriate copyright notice for your modifications adjacent to
 the other copyright notices.
\end_layout

\begin_layout Itemize
F.
 Include, immediately after the copyright notices, a license notice giving
 the public permission to use the Modified Version under the terms of this
 License, in the form shown in the Addendum below.
\end_layout

\begin_layout Itemize
G.
 Preserve in that license notice the full lists of Invariant Sections and
 required Cover Texts given in the Document's license notice.
\end_layout

\begin_layout Itemize
H.
 Include an unaltered copy of this License.
\end_layout

\begin_layout Itemize
I.
 Preserve the section entitled "History", and its title, and add to it an
 item stating at least the title, year, new authors, and publisher of the
 Modified Version as given on the Title Page.
 If there is no section entitled "History" in the Document, create one stating
 the title, year, authors, and publisher of the Document as given on its
 Title Page, then add an item describing the Modified Version as stated
 in the previous sentence.
\end_layout

\begin_layout Itemize
J.
 Preserve the network location, if any, given in the Document for public
 access to a Transparent copy of the Document, and likewise the network
 locations given in the Document for previous versions it was based on.
 These may be placed in the "History" section.
 You may omit a network location for a work that was published at least
 four years before the Document itself, or if the original publisher of
 the version it refers to gives permission.
\end_layout

\begin_layout Itemize
K.
 In any section entitled "Acknowledgements" or "Dedications", preserve the
 section's title, and preserve in the section all the substance and tone
 of each of the contributor acknowledgements and/or dedications given therein.
\end_layout

\begin_layout Itemize
L.
 Preserve all the Invariant Sections of the Document, unaltered in their
 text and in their titles.
 Section numbers or the equivalent are not considered part of the section
 titles.
\end_layout

\begin_layout Itemize
M.
 Delete any section entitled "Endorsements".
 Such a section may not be included in the Modified Version.
\end_layout

\begin_layout Itemize
N.
 Do not retitle any existing section as "Endorsements" or to conflict in
 title with any Invariant Section.
 
\end_layout

\begin_layout Standard
If the Modified Version includes new front-matter sections or appendices
 that qualify as Secondary Sections and contain no material copied from
 the Document, you may at your option designate some or all of these sections
 as invariant.
 To do this, add their titles to the list of Invariant Sections in the Modified
 Version's license notice.
 These titles must be distinct from any other section titles.
\end_layout

\begin_layout Standard
You may add a section entitled "Endorsements", provided it contains nothing
 but endorsements of your Modified Version by various parties--for example,
 statements of peer review or that the text has been approved by an organization
 as the authoritative definition of a standard.
\end_layout

\begin_layout Standard
You may add a passage of up to five words as a Front-Cover Text, and a passage
 of up to 25 words as a Back-Cover Text, to the end of the list of Cover
 Texts in the Modified Version.
 Only one passage of Front-Cover Text and one of Back-Cover Text may be
 added by (or through arrangements made by) any one entity.
 If the Document already includes a cover text for the same cover, previously
 added by you or by arrangement made by the same entity you are acting on
 behalf of, you may not add another; but you may replace the old one, on
 explicit permission from the previous publisher that added the old one.
\end_layout

\begin_layout Standard
The author(s) and publisher(s) of the Document do not by this License give
 permission to use their names for publicity for or to assert or imply endorseme
nt of any Modified Version.
 
\end_layout

\begin_layout Section*
5.
 COMBINING DOCUMENTS
\end_layout

\begin_layout Standard
You may combine the Document with other documents released under this License,
 under the terms defined in section 4 above for modified versions, provided
 that you include in the combination all of the Invariant Sections of all
 of the original documents, unmodified, and list them all as Invariant Sections
 of your combined work in its license notice.
\end_layout

\begin_layout Standard
The combined work need only contain one copy of this License, and multiple
 identical Invariant Sections may be replaced with a single copy.
 If there are multiple Invariant Sections with the same name but different
 contents, make the title of each such section unique by adding at the end
 of it, in parentheses, the name of the original author or publisher of
 that section if known, or else a unique number.
 Make the same adjustment to the section titles in the list of Invariant
 Sections in the license notice of the combined work.
\end_layout

\begin_layout Standard
In the combination, you must combine any sections entitled "History" in
 the various original documents, forming one section entitled "History";
 likewise combine any sections entitled "Acknowledgements", and any sections
 entitled "Dedications".
 You must delete all sections entitled "Endorsements."
\end_layout

\begin_layout Section*
6.
 COLLECTIONS OF DOCUMENTS
\end_layout

\begin_layout Standard
You may make a collection consisting of the Document and other documents
 released under this License, and replace the individual copies of this
 License in the various documents with a single copy that is included in
 the collection, provided that you follow the rules of this License for
 verbatim copying of each of the documents in all other respects.
\end_layout

\begin_layout Standard
You may extract a single document from such a collection, and distribute
 it individually under this License, provided you insert a copy of this
 License into the extracted document, and follow this License in all other
 respects regarding verbatim copying of that document.
 
\end_layout

\begin_layout Section*
7.
 AGGREGATION WITH INDEPENDENT WORKS
\end_layout

\begin_layout Standard
A compilation of the Document or its derivatives with other separate and
 independent documents or works, in or on a volume of a storage or distribution
 medium, does not as a whole count as a Modified Version of the Document,
 provided no compilation copyright is claimed for the compilation.
 Such a compilation is called an "aggregate", and this License does not
 apply to the other self-contained works thus compiled with the Document,
 on account of their being thus compiled, if they are not themselves derivative
 works of the Document.
\end_layout

\begin_layout Standard
If the Cover Text requirement of section 3 is applicable to these copies
 of the Document, then if the Document is less than one quarter of the entire
 aggregate, the Document's Cover Texts may be placed on covers that surround
 only the Document within the aggregate.
 Otherwise they must appear on covers around the whole aggregate.
\end_layout

\begin_layout Section*
8.
 TRANSLATION
\end_layout

\begin_layout Standard
Translation is considered a kind of modification, so you may distribute
 translations of the Document under the terms of section 4.
 Replacing Invariant Sections with translations requires special permission
 from their copyright holders, but you may include translations of some
 or all Invariant Sections in addition to the original versions of these
 Invariant Sections.
 You may include a translation of this License provided that you also include
 the original English version of this License.
 In case of a disagreement between the translation and the original English
 version of this License, the original English version will prevail.
\end_layout

\begin_layout Section*
9.
 TERMINATION
\end_layout

\begin_layout Standard
You may not copy, modify, sublicense, or distribute the Document except
 as expressly provided for under this License.
 Any other attempt to copy, modify, sublicense or distribute the Document
 is void, and will automatically terminate your rights under this License.
 However, parties who have received copies, or rights, from you under this
 License will not have their licenses terminated so long as such parties
 remain in full compliance.
 
\end_layout

\begin_layout Section*
10.
 FUTURE REVISIONS OF THIS LICENSE
\end_layout

\begin_layout Standard
The Free Software Foundation may publish new, revised versions of the GNU
 Free Documentation License from time to time.
 Such new versions will be similar in spirit to the present version, but
 may differ in detail to address new problems or concerns.
 See http://www.gnu.org/copyleft/.
\end_layout

\begin_layout Standard
Each version of the License is given a distinguishing version number.
 If the Document specifies that a particular numbered version of this License
 "or any later version" applies to it, you have the option of following
 the terms and conditions either of that specified version or of any later
 version that has been published (not as a draft) by the Free Software Foundatio
n.
 If the Document does not specify a version number of this License, you
 may choose any version ever published (not as a draft) by the Free Software
 Foundation.
\end_layout

\begin_layout Standard
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"

\end_inset


\end_layout

\end_body
\end_document
